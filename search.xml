<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C++面试基础知识（三）（草稿）</title>
      <link href="/2020/03/02/cpp03/"/>
      <url>/2020/03/02/cpp03/</url>
      
        <content type="html"><![CDATA[<p>typedef和using  P128</p><p>函数指针  P128 重点</p><p>1</p><p>2</p><p>3</p><a id="more"></a><h3 id="typedef和using"><a href="#typedef和using" class="headerlink" title="typedef和using"></a>typedef和using</h3><h3 id="函数指针"><a href="#函数指针" class="headerlink" title="函数指针"></a>函数指针</h3>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++面试基础知识（二）</title>
      <link href="/2020/03/01/cpp02/"/>
      <url>/2020/03/01/cpp02/</url>
      
        <content type="html"><![CDATA[<p>左移和右移</p><p>static关键字</p><p>指针和const（顶层const和底层const）</p><p>指针的引用和<del>引用的指针</del></p><p>指针的指针和<del>引用的引用</del></p><p>函数重载</p><p>可变参数</p><a id="more"></a><h3 id="左移和右移"><a href="#左移和右移" class="headerlink" title="左移和右移"></a>左移和右移</h3><p>对于<code>int</code>，左移往低位补0，右移往高位补符号位</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">0x7fffffff</span>;<span class="comment">// a = 2147483647</span></span><br><span class="line"><span class="keyword">int</span> b = <span class="number">1</span>;<span class="comment">// b = 1</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; (a &lt;&lt; <span class="number">1</span>) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">// -2</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; (b &gt;&gt; <span class="number">1</span>) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">// 0</span></span><br><span class="line">另外发现一个有趣的现象：</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; (b &gt;&gt; <span class="number">32</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; (b &gt;&gt; <span class="number">64</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; (b &gt;&gt; <span class="number">96</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">以上三条结果都是<span class="number">1</span>，可能对右移的值进行了%<span class="number">32</span>运算</span><br><span class="line"></span><br><span class="line">此外，</span><br><span class="line">左移k位就是乘<span class="number">2</span>^k（不考虑符号位时），效果同*号</span><br><span class="line">右移k位就是除<span class="number">2</span>^k，这里除是向负取整，跟/(向<span class="number">0</span>取整)不一样</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">-3</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; (a &gt;&gt; <span class="number">1</span>) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">// -2</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; (a / <span class="number">2</span>) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">// -1</span></span><br></pre></td></tr></table></figure><p>对于<code>unsigned int</code>，左移往低位补0，右移往高位补0</p><h3 id="static关键字"><a href="#static关键字" class="headerlink" title="static关键字"></a>static关键字</h3><ul><li>C用法，在局部变量之前加，变成静态局部变量，会存储在静态存储区，作用域只在当前函数</li><li>C用法，在全局变量之前加，变成静态全局变量，会存储在静态存储区，作用域是当前文件</li><li>C用法，在函数之前加，变成静态函数，作用域是当前文件</li><li>C++用法，在类成员对象之前加，变成静态成员对象，在该类的所有对象中只有一个静态成员对象，在程序开始时创建</li><li>C++用法，在类成员函数之前加，变成静态成员函数，可以在不创建类对象的时候调用静态成员函数，类名::函数()，在静态成员函数中不能直接引用类中的非静态成员，需要通过一个对象实例来引用</li></ul><p>注意：</p><p>类成员的初始化</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>: <span class="comment">// private的话无法访问输出</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> a;<span class="comment">// 不能再类内初始化</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> b = <span class="number">2</span>;<span class="comment">// const可以在类内初始化</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> test::a = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; test::a &lt;&lt; <span class="built_in">endl</span>;<span class="comment">// 1</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; test::b &lt;&lt; <span class="built_in">endl</span>;<span class="comment">// 2</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>static成员函数不能被声明为const</p><h3 id="指针和const（顶层const和底层const）"><a href="#指针和const（顶层const和底层const）" class="headerlink" title="指针和const（顶层const和底层const）"></a>指针和const（顶层const和底层const）</h3><p>指向const的指针（底层const）：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> *p1 = &amp;i;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> *p2 = &amp;i;</span><br><span class="line"><span class="comment">// 可以改变p，不能改变*p</span></span><br></pre></td></tr></table></figure><p>const指针（顶层const）：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> *<span class="keyword">const</span> p = &amp;i;</span><br><span class="line"><span class="comment">// 可以改变*p，不能改变p</span></span><br></pre></td></tr></table></figure><!--P95--><!--const对象不能调用非const成员函数？--><!--![1583077977008](C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\1583077977008.png)--><h3 id="指针的引用和引用的指针"><a href="#指针的引用和引用的指针" class="headerlink" title="指针的引用和引用的指针"></a>指针的引用和<del>引用的指针</del></h3><p>指针的引用：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> *p = &amp;i;</span><br><span class="line"><span class="keyword">int</span> *&amp;r = p;</span><br></pre></td></tr></table></figure><p>引用的指针：不存在的</p><h4 id="指针的指针和引用的引用"><a href="#指针的指针和引用的引用" class="headerlink" title="指针的指针和引用的引用"></a>指针的指针和<del>引用的引用</del></h4><p>指针的指针即我们常说的二级指针（可以无限扩充）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> *p = &amp;i;</span><br><span class="line"><span class="keyword">int</span> **pp = &amp;p;</span><br></pre></td></tr></table></figure><p>引用的引用：不存在的</p><h3 id="函数重载"><a href="#函数重载" class="headerlink" title="函数重载"></a>函数重载</h3><p>牢牢记住：C++的函数重载只能从参数上进行区分</p><p>必须满足参数个数/类型/顺序不同的才能重载</p><p>返回值不同是不行的</p><h3 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h3><p>C++中，推荐使用<code>initializer_list</code>来实现可变参数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;initializer_list&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">initializer_list</span>&lt;<span class="keyword">int</span>&gt; nums)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> result = INT_MIN;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> &amp;num : nums)</span><br><span class="line">result = num &gt; result ? num : result;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">max</span>(&#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;) &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++11多线程开发---join、detach、joinable</title>
      <link href="/2020/02/29/cppthread01/"/>
      <url>/2020/02/29/cppthread01/</url>
      
        <content type="html"><![CDATA[<p>C++11多线程开发—-join、detach、joinable</p><a id="more"></a><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>进程是一个程序的实例，一个进程包含多个线程</p><p>C++中，线程的作用在于执行代码、调用函数，一个进程包含一个主线程</p><p>主线程的入口即是main()，因此所有代码都是从main开始的</p><p>我们可以创建子线程，让主线程和子线程同时去干事情</p><h3 id="C-11多线程开发头文件"><a href="#C-11多线程开发头文件" class="headerlink" title="C++11多线程开发头文件"></a>C++11多线程开发头文件</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="创建线程"><a href="#创建线程" class="headerlink" title="创建线程"></a>创建线程</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="function">thread <span class="title">myt</span><span class="params">(fun, [... args])</span></span>;</span><br></pre></td></tr></table></figure><p>说明：</p><p>fun可传递一个普通函数、成员函数、可调用对象、lamda表达式</p><p>args用于传递fun的参数</p><p>看例子</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"这是子线程fun1！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fun2</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"这是子线程fun2！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fun3</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"这是子线程fun3！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">auto</span> fun4 = []() &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"这是子线程fun4！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="function">thread <span class="title">t</span><span class="params">(fun1)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//fun2 A;</span></span><br><span class="line"><span class="comment">//std::thread t(&amp;fun2::work, &amp;A);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//fun3 A;</span></span><br><span class="line"><span class="comment">//std::thread t(A);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//std::thread t(fun4);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"这是主线程！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">t.join();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从结果我们可以注意到，子线程和主线程的调度是由操作系统决定的，所以输出结果可能是交错的</p><h3 id="join"><a href="#join" class="headerlink" title="join()"></a>join()</h3><p><code>阻塞当前线程，等待子线程t执行完毕后继续运行</code></p><p>例如上例中，若我们不加<code>t.join()</code>，则可能主线程先执行完毕，我们看不到子线程打印的五句话了</p><h3 id="detch"><a href="#detch" class="headerlink" title="detch()"></a>detch()</h3><p><code>将当前线程与子线程t分离，子线程t交由守护线程管理，与当前线程无关</code></p><p>简单来说就是将当前线程与子线程之间没有联系了，但这样做往往会产生一些问题</p><p>比如子线程如果在使用主线程的某些对象，当主线程销毁后，对象也会进行销毁，那么子线程引用对象的时候可能会导致系统出错</p><h3 id="joinable"><a href="#joinable" class="headerlink" title="joinable()"></a>joinable()</h3><p><code>返回子线程t能否join/detch</code></p><p>一个子线程join了之后就不能再detch，detch之后不能再join</p>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 面试 </tag>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++面试基础知识（一）</title>
      <link href="/2020/02/29/cpp01/"/>
      <url>/2020/02/29/cpp01/</url>
      
        <content type="html"><![CDATA[<p>C++的内存分区</p><p>指针数组和数组指针</p><p><del>引用数组</del>和数组引用</p><p>struct和class</p><p>struct的空间大小及数据对齐</p><a id="more"></a><h3 id="内存分区"><a href="#内存分区" class="headerlink" title="内存分区"></a>内存分区</h3><ol><li>堆:由程序员手动分配和释放，完全不同于数据结构中的堆，分配方式类似链表。由malloc(C语言)或new (C++)来分配，free (C语言)和delete (C++) 释放。若程序员不释放，程序结束时由系统释放。</li><li>2)栈:由编译器自动分配和释放的，存放函数的参数值、局部变量的值等。操作方式类似数据结构中的栈。</li><li>静态存储区:存放全局变量和静态变量。包括DATA段(全局初始化区)与BSS段(全局未初始化区)。其中，初始化的全局变量和静态变量存放在DATA段，未初始化的全局变量和未初始化的静态变量存放在BSS段。程序结束后由系统释放。其中BSS段的特点是:在程序执行之前BSS段会自动清0。所以，未初始的全局变量与静态变量在程序执行之前已经成0了。</li><li>文字常量区:常量字符串就是放在这里的。程序结束后由系统释放。</li><li>程序代码区:存放函数体的二进制代码。</li></ol><h3 id="指针数组和数组指针"><a href="#指针数组和数组指针" class="headerlink" title="指针数组和数组指针"></a>指针数组和数组指针</h3><p>指针数组：一个数组里边都是指针</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> *a[<span class="number">10</span>];<span class="comment">// 有10个int*</span></span><br></pre></td></tr></table></figure><p>数组指针：一个指向数组的指针</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> (*p)[<span class="number">10</span>];<span class="comment">// 指向长度为10的指针</span></span><br></pre></td></tr></table></figure><h3 id="引用数组和数组引用"><a href="#引用数组和数组引用" class="headerlink" title="引用数组和数组引用"></a><del>引用数组</del>和数组引用</h3><p>引用数组：不存在的</p><p>数组引用：一个数组的引用（别名）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> (&amp;a)[<span class="number">10</span>];</span><br></pre></td></tr></table></figure><h3 id="struct和class"><a href="#struct和class" class="headerlink" title="struct和class"></a>struct和class</h3><p>在C++中，struct只有两点跟class不同</p><ol><li>struct默认访问权限是public，class是private</li><li>struct默认继承方式是public，class是private</li></ol><h3 id="struct的空间大小及数据对齐"><a href="#struct的空间大小及数据对齐" class="headerlink" title="struct的空间大小及数据对齐"></a>struct的空间大小及数据对齐</h3><ol><li>整体空间是占用空间最大的成员所占字节数的整数倍</li><li>内存按结构体成员顺序依次存放，当排到某一成员时，其前面已摆放的空间大小必须是该成员类型大小的整数倍，不够则补齐</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> a;</span><br><span class="line">    <span class="keyword">double</span> b;</span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line">    <span class="keyword">char</span> d;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">B</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> a;</span><br><span class="line">    <span class="keyword">char</span> b;</span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line">    <span class="keyword">double</span> d;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">sizeof</span>(A)结果为<span class="number">24</span></span><br><span class="line">a:[<span class="number">0</span>~<span class="number">7</span>] b:[<span class="number">8</span>~<span class="number">15</span>] c:[<span class="number">16</span>~<span class="number">19</span>] d:[<span class="number">20</span>~<span class="number">23</span>]</span><br><span class="line"><span class="keyword">sizeof</span>(B)结果为<span class="number">16</span></span><br><span class="line">a:[<span class="number">0</span>~<span class="number">0</span>] b:[<span class="number">1</span>~<span class="number">3</span>] c:[<span class="number">4</span>~<span class="number">7</span>] d:[<span class="number">8</span>~<span class="number">15</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode训练日记</title>
      <link href="/2020/01/19/acm02/"/>
      <url>/2020/01/19/acm02/</url>
      
        <content type="html"><![CDATA[<p>（ 寒假Flag ）</p><p>《 STL源码剖析 》</p><p>《 编程珠玑 》</p><p>《 Effective C++ 》</p><p>leetcode 200题</p> <a id="more"></a><div class="table-container"><table><thead><tr><th>题号</th><th>我的时间复杂度</th><th>我的空间复杂度</th><th>难度</th></tr></thead><tbody><tr><td>1</td><td>$O(nlogn)$   / $O(n)$</td><td>$O(n)$</td><td>E</td></tr><tr><td>2</td><td>$O(n)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>3</td><td>$O(n)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>4</td><td>$O(log(m   + n))$</td><td>$O(1)$</td><td>H</td></tr><tr><td>5</td><td>$O(n)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>6</td><td>$O(n)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>7</td><td>$O(logn)$</td><td>$O(1)$</td><td>E</td></tr><tr><td>8</td><td>$O(n)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>9</td><td>$O(logn)$</td><td>$O(logn)$</td><td>E</td></tr><tr><td>10</td><td>$O()$</td><td>$O()$</td><td>H</td></tr><tr><td>11</td><td>$O(n)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>12</td><td>$O(1)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>13</td><td>$O(n)$</td><td>$O(1)$</td><td>E</td></tr><tr><td>14</td><td>$O(nm)$</td><td>$O(1)$</td><td>E</td></tr><tr><td>15</td><td>$O(n^2)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>16</td><td>$O(n^2)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>17</td><td>$O(3^n)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>18</td><td>$O(n^3)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>19</td><td>$O(n)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>20</td><td>$O(n)$</td><td>$O(n)$</td><td>E</td></tr><tr><td>21</td><td>$O(n)$</td><td>$O(1)$</td><td>E</td></tr><tr><td>22</td><td>$O(2^n)$</td><td>$O(2^n)$</td><td>M</td></tr><tr><td>23</td><td>$O(nlogk)$</td><td>$O(logk)$</td><td>H</td></tr><tr><td>24</td><td>$O(n)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>25</td><td>$O()$</td><td>$O()$</td><td>H</td></tr><tr><td>26</td><td>$O(n)$</td><td>$O(1)$</td><td>E</td></tr><tr><td>27</td><td>$O(n)$</td><td>$O(1)$</td><td>E</td></tr><tr><td>28</td><td>$O(n+m)$</td><td>$O(m)$</td><td>E</td></tr><tr><td>29</td><td>$O(logn)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>30</td><td>$O(n)$</td><td>$O(m)$</td><td>H</td></tr><tr><td>31</td><td>$O(n)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>32</td><td>$O()$</td><td>$O()$</td><td>H</td></tr><tr><td>33</td><td>$O()$</td><td>$O()$</td><td>M</td></tr><tr><td>34</td><td>$O()$</td><td>$O()$</td><td>M</td></tr><tr><td>35</td><td>$O()$</td><td>$O()$</td><td>E</td></tr><tr><td>36</td><td>$O(n^2)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>37</td><td>$O(可以过)$</td><td>$O()$</td><td>H</td></tr><tr><td>38</td><td>$O(nm)$</td><td>$O(nm)$</td><td>E</td></tr><tr><td>39</td><td>$O(可以过)$</td><td>$O()$</td><td>M</td></tr><tr><td>40</td><td>$O(可以过)$</td><td>$O()$</td><td>M</td></tr><tr><td>41</td><td>$O(n)$</td><td>$O(1)$</td><td>H</td></tr><tr><td>42</td><td>$O(n)$</td><td>$O(n)$</td><td>H</td></tr><tr><td>43</td><td>$O(nm)$</td><td>$O(n+m)$</td><td>M</td></tr><tr><td>44</td><td>$O()$</td><td>$O()$</td><td>H</td></tr><tr><td>45</td><td>$O(n)$</td><td>$O(1)$</td><td>H</td></tr><tr><td>46</td><td>$O(n!)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>47</td><td>$O(n!)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>48</td><td>$O(n^2)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>49</td><td>$O(nlogn)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>50</td><td>$O(logn)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>51</td><td>$O(n!)$</td><td>$O(n^2)$</td><td>H</td></tr><tr><td>52</td><td>$O(n!)$</td><td>$O(n^2)$</td><td>H</td></tr><tr><td>53</td><td>$O(n)$</td><td>$O(1)$</td><td>E</td></tr><tr><td>54</td><td>$O(nm)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>55</td><td>$O(n)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>56</td><td>$O(nlogn)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>57</td><td>$O(n)$</td><td>$O(n)$</td><td>H</td></tr><tr><td>58</td><td>$O(n)$</td><td>$O(1)$</td><td>E</td></tr><tr><td>59</td><td>$O(n^2)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>60</td><td>$O(n)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>61</td><td>$O(n)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>62</td><td>$O(nm)$</td><td>$O(nm)$</td><td>M</td></tr><tr><td>63</td><td>$O(nm)$</td><td>$O(nm)$</td><td>M</td></tr><tr><td>64</td><td>$O(nm)$</td><td>$O(nm)$</td><td>M</td></tr><tr><td>65</td><td>$O(n)$</td><td>$O(1)$</td><td>H</td></tr><tr><td>66</td><td>$O(n)$</td><td>$O(1)$</td><td>E</td></tr><tr><td>67</td><td>$O(n+m)$</td><td>$O(n+m)$</td><td>E</td></tr><tr><td>68</td><td>$O()$</td><td>$O()$</td><td>H</td></tr><tr><td>69</td><td>$O(logn)$</td><td>$O(1)$</td><td>E</td></tr><tr><td>70</td><td>$O(n)$</td><td>$O(1)$</td><td>E</td></tr><tr><td>71</td><td>$O(n)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>72</td><td>$O(nm)$</td><td>$O(nm)$</td><td>H</td></tr><tr><td>73</td><td>$O(nm)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>74</td><td>$O(logn+logm)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>75</td><td>$O(n)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>76</td><td>$O(n)$</td><td>$O(1)$</td><td>H</td></tr><tr><td>77</td><td>$O(n!)$</td><td>$O(k)$</td><td>M</td></tr><tr><td>78</td><td>$O(2^n)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>79</td><td>$O(2^k)$</td><td>$O(nm)$</td><td>M</td></tr><tr><td>80</td><td>$O(n)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>81</td><td>$O(logn)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>82</td><td>$O(n)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>83</td><td>$O(n)$</td><td>$O(1)$</td><td>E</td></tr><tr><td>84</td><td>$O(n)$</td><td>$O(n)$</td><td>H</td></tr><tr><td>85</td><td>$O(n(n+m))$</td><td>$O(m)$</td><td>H</td></tr><tr><td>86</td><td>$O(n)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>87</td><td>$O()$</td><td>$O()$</td><td>H</td></tr><tr><td>88</td><td>$O(n)$</td><td>$O(1)$</td><td>E</td></tr><tr><td>89</td><td>$O(2^n)$</td><td>$O(n2^n)$</td><td>M</td></tr><tr><td>90</td><td>$O(2^n)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>91</td><td>$O(n)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>92</td><td>$O(n)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>93</td><td>$O(可以过)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>94</td><td>$O(n)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>95</td><td>$O(可以过)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>96</td><td>$O(n^2)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>97</td><td>$O(nm)$</td><td>$O(nm)$</td><td>H</td></tr><tr><td>98</td><td>$O(n)$</td><td>$O(1)$</td><td>M</td></tr><tr><td>99</td><td>$O(n)$</td><td>$O(n)$</td><td>H</td></tr><tr><td>100</td><td>$O(n)$</td><td>$O(n)$</td><td>E</td></tr><tr><td>101</td><td>$O(n)$</td><td>$O(n)$</td><td>E</td></tr><tr><td>102</td><td>$O(n)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>103</td><td>$O(n)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>104</td><td>$O(n)$</td><td>$O(n)$</td><td>E</td></tr><tr><td>105</td><td>$O(n)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>106</td><td>$O(n)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>107</td><td>$O(n)$</td><td>$O(n)$</td><td>E</td></tr><tr><td>108</td><td>$O(n)$</td><td>$O(n)$</td><td>E</td></tr><tr><td>109</td><td>$O(nlogn)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>110</td><td>$O(n)$</td><td>$O(n)$</td><td>E</td></tr><tr><td>111</td><td>$O(n)$</td><td>$O(n)$</td><td>E</td></tr><tr><td>112</td><td>$O(n)$</td><td>$O(n)$</td><td>E</td></tr><tr><td>113</td><td>$O(n)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>114</td><td>$O(n)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>115</td><td>$O(nm)$</td><td>$O(nm)$</td><td>H</td></tr><tr><td>116</td><td>$O(n)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>117</td><td>$O(n)$</td><td>$O(n)$</td><td>M</td></tr><tr><td>118</td><td>$O(n^2)$</td><td>$O(1)$</td><td>E</td></tr><tr><td>119</td><td>$O(n)$</td><td>$O(k)$</td><td>E</td></tr><tr><td>120</td><td>$O(n^2)$</td><td>$O(n)$</td><td>M</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《STL源码剖析》第4章 序列式容器---vector</title>
      <link href="/2019/11/28/stl01/"/>
      <url>/2019/11/28/stl01/</url>
      
        <content type="html"><![CDATA[<p><strong>序列式容器间关系</strong></p><ul><li><code>array</code>（ 数组 ）</li><li><code>vector</code> （ 向量 ）<ul><li><code>heap</code> （ 堆、对外隐藏 ）<ul><li><code>priority_queue</code> （ 优先队列 ）</li></ul></li></ul></li><li><code>list</code> （ 链表 ）</li><li><code>deque</code> （ 双端队列 ）<ul><li><code>stack</code> （ 栈 ）</li><li><code>queue</code> （ 队列 ）</li></ul></li></ul><p>本文简单记录一下<code>vector</code>及其衍生类<code>heap</code>、<code>priority</code>的使用方法、一些底层原理及设计</p><a id="more"></a><h2 id="vector"><a href="#vector" class="headerlink" title="vector"></a>vector</h2><p><code>vector</code>可看成是一个可以动态改变空间大小的数组</p><h3 id="类的定义"><a href="#类的定义" class="headerlink" title="类的定义"></a>类的定义</h3><p><code>vector</code>的模板参数有2个，分别为数据类型和空间配置器，空间配置器默认使用SGI STL的空间配置器</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>, <span class="title">class</span> <span class="title">Alloc</span> = <span class="title">alloc</span>&gt;</span></span><br></pre></td></tr></table></figure><p>类内部有3个<code>protected</code>迭代器成员</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iterator start;<span class="comment">// 指向当前空间的头部</span></span><br><span class="line">iterator <span class="built_in">end</span>;<span class="comment">// 指向当前空间的尾部</span></span><br><span class="line">iterator end_of_storage; <span class="comment">// 指向当前可用空间的尾部</span></span><br></pre></td></tr></table></figure><p>由这3个成员便可大致猜出<code>vector</code>其实也是先开辟出一段连续的空间，然后在这段连续空间内进行操作</p><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>()<span class="comment">// 空参数，vector的大小也是0</span></span><br><span class="line"><span class="built_in">vector</span>(<span class="built_in">size</span> n, <span class="keyword">const</span> type&amp; value)<span class="comment">// vector初始化为n个value</span></span><br><span class="line"><span class="function"><span class="keyword">explicit</span> <span class="title">vector</span><span class="params">(<span class="built_in">size</span> n)</span><span class="comment">// 显式转换，初始化为n个默认的value</span></span></span><br></pre></td></tr></table></figure><p><strong>关于explicit关键字</strong></p><p>具体可参见：<a href="https://www.cnblogs.com/rednodel/p/9299251.html" target="_blank" rel="noopener">https://www.cnblogs.com/rednodel/p/9299251.html</a></p><p>我这里大致说一下，就是当构造函数只有一个参数时，在执行赋值操作时可能会发生隐式转换，例如</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a = <span class="number">10</span>;<span class="comment">// 隐式转换，生成size为10的vector</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a = <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(<span class="number">10</span>); <span class="comment">// 显示转换</span></span><br></pre></td></tr></table></figure><p>由构造函数形式我们可以得出以下用法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>创建大小为n,初值为<span class="number">0</span>的<span class="built_in">vector</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a(n, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a = <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(n, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a(n);</span><br><span class="line"><span class="number">2.</span>创建n*m的二维矩阵</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; a(n, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(m, <span class="number">0</span>));</span><br><span class="line"><span class="number">3.</span>创建n*<span class="number">1</span>的二维矩阵</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; a(n, &#123;<span class="number">0</span>&#125;);</span><br></pre></td></tr></table></figure><h3 id="成员函数"><a href="#成员函数" class="headerlink" title="成员函数"></a>成员函数</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">begin();<span class="comment">// 返回头迭代器</span></span><br><span class="line">end();<span class="comment">// 返回尾迭代器</span></span><br><span class="line"></span><br><span class="line">front();<span class="comment">// 返回头元素</span></span><br><span class="line">back();<span class="comment">// 返回尾元素</span></span><br><span class="line"></span><br><span class="line">empty();<span class="comment">// 返回是否为空</span></span><br><span class="line">size();<span class="comment">// 返回当前大小</span></span><br><span class="line">capacity();<span class="comment">// 返回可用大小</span></span><br><span class="line"></span><br><span class="line">push_back(value);<span class="comment">// 往尾部添加一个元素</span></span><br><span class="line">pop_back();<span class="comment">// 删除尾部元素</span></span><br><span class="line"></span><br><span class="line">resize(size);<span class="comment">// 改变vector大小为size，值为默认值</span></span><br><span class="line">resize(size, value);<span class="comment">// 改变vector大小为size，值变为value</span></span><br><span class="line"></span><br><span class="line">erase(pos);<span class="comment">// 删除迭代器pos所指元素</span></span><br><span class="line">erase(begin, end); <span class="comment">// 删除[begin, end)内的元素</span></span><br><span class="line"></span><br><span class="line">clear();<span class="comment">// 清空vector，只是size清空，capacity还是存在</span></span><br><span class="line"></span><br><span class="line">insert(pos, size, value);<span class="comment">// 在pos之前插入size个value</span></span><br></pre></td></tr></table></figure><p>注意：调用vector的成员函数后原来的<strong>迭代器可能会失效！</strong></p><h3 id="大小调整机制"><a href="#大小调整机制" class="headerlink" title="大小调整机制"></a>大小调整机制</h3><p>我们知道，如果每当可用空间不够时，我们扩充一个单位的大小，然后移动整个数组的话需要的时间代价很大，因此stl采用<strong>倍增</strong>的方式扩展可用大小。</p><p>也就是说，空的vector一开始的可用大小为0，push_back一个元素后变为1，再添加后变为2，然后是4,8,16……</p><p>通过调用底层的copy函数，速度较快</p><h3 id="heap、priority-queue"><a href="#heap、priority-queue" class="headerlink" title="heap、priority_queue"></a>heap、priority_queue</h3><p>以后补充。。。</p>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> STL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019ccpc哈尔滨打铜记 - [转载自队友博客]</title>
      <link href="/2019/10/24/ccpc2019harbin/"/>
      <url>/2019/10/24/ccpc2019harbin/</url>
      
        <content type="html"><![CDATA[<p>原文：<a href="https://www.cnblogs.com/wrjlinkkkkkk/p/11674822.html" target="_blank" rel="noopener">https://www.cnblogs.com/wrjlinkkkkkk/p/11674822.html</a></p><a id="more"></a><p>小学生日记：</p><p>2019.10.13，哈尔滨，打了个铜</p><h2 id="开头"><a href="#开头" class="headerlink" title="开头"></a>开头</h2><p>先说结论，<strong>这次失败，我的锅70%，sdl的锅5%，ykh25%</strong></p><h2 id="Day0"><a href="#Day0" class="headerlink" title="Day0"></a>Day0</h2><p>周五，<br>我们队出现了奇怪的厄运上身<br>首先是我中途在飞机上数据线突然出现在前面座位上，下了飞机发现数据线丢了(<br>然后ykh的羽绒服被刮掉了一堆毛<br>后来sdl比赛的时候也一直激动地拉肚子上厕所<br>本来我是十分反对今天去吃东北菜的，但是还是架不住饿的诱惑，吃了<strong>一盆</strong>锅包肉</p><h2 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h2><p>哈尔滨真的是冷的一笔，我们出发去东北林业大学<br>学校很大很豪华，风景很美<br>和女队一起报道完拍了照，就去学校食堂挂机等热身赛了<br>我队的特色一直是ykh从a读到z，sdl从z读到a，我有代码敲代码，无代码读最短的（毕竟六级没过）<br>热身赛开始，我先上机敲完了头文件，ykh此时看懂了A题并告诉了我<br>然后一通操作过掉A题，此时rank40+<br>这个时候ykh和sdl都在看B，并且好像有哪一句话没有看懂，让我读一遍看看题意<br>我看了一遍居然直接看懂了并且脑子过了样例，跟队友讲了一遍就上机过了<br>此时rank大概铜首，问了下队友c题意，我直接说出了算法并且上机<br>这题细节有点多，我敲代码的时候出了不少问题，队友正在口胡d题<br>过了样例之后直接交就过了，此时大概rank仍然是40+<br>然后讨论了一会d题发现不可做，就开始了愉快的吹b时间<br>此时sdl和我争论c题的出处，我就让他上机测试java以及各种c++奇怪的东西之后自己写一下c体验一下<br>当然后面没写出来<br>另外ykh对我说：明天f题肯定是签到，你信不信</p><p>打完热身赛，我们站在东北林大门口等车的时候，我说“不知道明天这个时候我们是怎样的一种心情”，大家沉默<br>后来我们得出了一致结论：无论如何，铜的话太丢人了</p><h2 id="Day2"><a href="#Day2" class="headerlink" title="Day2"></a>Day2</h2><p>依旧的寒冷，队友早上似乎十分紧张，一直拉肚子<br>我们刚开始叫的车还在来的路上被人蹭了，司机估计在和人干架，就叫我们取消了订单。。<br>另外正式赛赛前两分钟，sdl还在厕所里，还好在倒计时前及时回来了。。<br>正赛开始了，我依然是上机敲头文件，敲完之后队友还在看题<br>我瞟了一眼，ykh居然在看真的在看F题。。。我就去看了最短的I题，发现题意比较简单就跟ykh互相交换了一下题意，<br>F题直接就出了算法，我就开始敲F了<br>敲了一半，队友告诉我I题特变简单，随便特判一下，我就先暂停F过了I题，<br>然后继续F，因为很久没写状压了，敲完没过样例，叫sdl过来帮我看代码，改了一下初值，就过了<br>然后看了一下榜，有点懵：I和K绿了一大片，F题没绿多少，我们反向签到了<br>这个时候让队友赶紧去做K，ykh推了半张纸的公式，被sdl看了一下样例猜了一下公式秒掉了<br>继续跟榜开F题，虽然还是签到状态，但此时已经是大家一起集火这一题了<br>我和ykh各出了一些假算法和一些数据，sdl讲了一个我们没人听懂但是能过已知数据的做法<br>果断（莽）让sdl上机写自己的思路，ykh帮忙解决了许多代码问题（sdl让此处对ykh提出特别表扬），然后交上去1A<br>此时1h50m，我队4题均1A，但是由于过于求稳，时间比较慢，rank上是银尾<br>开了E题，我先把这个问题分解了子问题，然后和队友逐个讨论解决子问题的可行性并证明复杂度<br>发现复杂度大概O(n+k+nlogn)，n,k&lt;=1e6，通过昨天热身赛测的评测机感觉能(卡)过，就开始了不归路。。<br>在ykh的监督下，大概30m敲完代码，过了样例，交上去，T，1300ms/1000ms<br>这个时候看榜发现没有其他题可以做，果断打印代码和队友一起看<br>中间上厕所，发现吉老师居然在我旁边（后来每次想到这个画面都会热血澎湃）<br>我告诉队友，现在有几点可能性：1.复杂度分析有问题  2.代码写的不是这个复杂度<br>冷静分析后（后来发现并不冷静），我们认为复杂度分析没有问题，就开始一起看我的代码<br>我们不知道数据有没有跑完，所以先进行了一些卡常<br>中间经过了漫长的过程。。优化掉了3个O(n)，把快读改成了出题人给的快读，交上去后，T，2200ms/1000ms<br>众人傻眼，这时候ykh认为我的dfs炸了，我让他讲一下为什么，他没有讲明白（我没有听明白），还反向说服了他<br>封榜后我们感觉nlogn也许根本就过不去？然后我们就构思O(n)的方法：最后求的是出现最多次数的数的出现次数与sum/2的关系<br>ykh说：求众数<br>我说：对啊，求众数有一种O(n)的方法，(就是bzoj2456，我和ykh之前讨论过这个问题)，扩展一下搞在这个题上不就完事了<br>后来的事实证明，题解的O(n)算法这个时候其实我们已经出了<br>因为我还没想好细节，而sdl此时又出了一个我们没听懂的实现，我就让他上机了<br>sdl在我的代码上改了改，debug之后过了样例，交上去，T，2200ms/1000ms<br>众人再次傻眼，此时比赛仅剩1m，铜首<br>赛后大家分析了一下这两份代码，是dfs炸了，但是又没人能解释为什么，因为表面上它没有任何问题：一棵树n个节点，叶子节点上有序列，序列长度的和为k，dfs它的复杂度是 O(n+k)的</p><h2 id="Day3"><a href="#Day3" class="headerlink" title="Day3"></a>Day3</h2><p>今天晚上，我们拿着比赛的代码开会分析，<br>分析到了这个dfs后，我让ykh再讲一下当时反驳我dfs的时候，他构造出了一个图：这根本不是一棵树<br>wdnmd（恍然大悟）<br>这其实是一个DAG，dfs的时候用dag的方式处理即可</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>分锅过程如下：<br>我作为队长，前四题策略出现问题导致罚时较高，作为主代码手没有理性分析E的代码复杂度，队友提出质疑没有特别在意，占锅70%<br>ykh其实知道这题我们最后差的关键所在，但是队友交流上出现了少许问题，当时没有讲清楚dfs出问题的关键原因，占锅25%<br>sdl其实不该有锅，但是在我建出树的模型的时候其实该跟他说的，但是他又在厕所。。然后最后改我代码的时候赛后发现了一些bug，勉强占锅5%</p><p>可以看出，我队交流上出现了大问题，如果我们三个人是一个人，这题在2h30m的时候就该过了(赛后得知nlogn也可以过)，所以并不是硬实力问题(?)<br>而是队伍训练太少，所以经过合计，我队将加大训练强度</p><p>dbq，这次让关注我们的人失望了<br>勉哉耘其业,以待岁晚收。<br>下次会继续加油的</p>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
            <tag> CCPC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计蒜客-Counting Sequences II(指数生成函数)</title>
      <link href="/2019/09/24/jsk41413/"/>
      <url>/2019/09/24/jsk41413/</url>
      
        <content type="html"><![CDATA[<blockquote><p>The Preliminary Contest for ICPC Asia Shanghai 2019</p></blockquote><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>You are given two integers $n$ and $m$, find out how many sequences $a_1, a_2, …, a_n$ of non-negative integer numbers satisfy the following signatures:</p><ul><li><p>$1\leq a_i \leq m$ for $1 \leq i \leq n$, and</p></li><li><p>$count(i) \% 2 = 0$ for all $i \% 2 = 0$，$count(i)$ is the of integers in the sequence that equals i.</p><p>  $1 \leq n \leq 1e18,1 \leq m \leq 2e5$</p></li></ul><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>找出有多少个满足长度为$n$并且偶数只出现偶数次的序列，序列的元素范围$[1,m]$</p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>若$m\%2==0$，$[1,m]$中有$\frac{m}{2}$个偶数，$\frac{m}{2}$个奇数，那么生成函数为</p><script type="math/tex; mode=display">(1+\frac{x^2}{2!}+\frac{x^4}{4!}+...)^{\frac{m}{2}}(1+\frac{x^2}{2!}+\frac{x^3}{3!}+...)^{\frac{m}{2}}</script><script type="math/tex; mode=display">\frac{e^x+e^{-x}}{2} = 1+\frac{x^2}{2!}+\frac{x^4}{4!}+... \\e^x = 1+\frac{x^2}{2!}+\frac{x^3}{3!}+...</script><p>化简一下</p><script type="math/tex; mode=display">\begin{aligned}=& (\frac{e^x+e^{-x}}{2})^{\frac{m}{2}}(e^x)^{\frac{m}{2}} \\=& (e^{2x}+1)^{\frac{m}{2}}({\frac{1}{2}})^{\frac{m}{2}} \\=& \sum_{i=0}^{\frac{m}{2}} {\frac{m}{2}\choose i}e^{2ix}({\frac{1}{2}})^{\frac{m}{2}} \\\end{aligned}</script><p>对应的排列数为</p><script type="math/tex; mode=display">({\frac{1}{2}})^{\frac{m}{2}} \sum_{i=0}^{\frac{m}{2}} {\frac{m}{2}\choose i}(2i)^{n}</script><p>若$m\%2==1$，$[1,m]$中有$\frac{m}{2}$个偶数，$\frac{m}{2}+1$个奇数，那么生成函数化简后为</p><script type="math/tex; mode=display">\begin{aligned}=& e^x(e^{2x}+1)^{\frac{m}{2}}({\frac{1}{2}})^{\frac{m}{2}} \\=& \sum_{i=0}^{\frac{m}{2}} {\frac{m}{2}\choose i}e^{(2i+1)x}({\frac{1}{2}})^{\frac{m}{2}} \\\end{aligned}</script><p>对应的排列数为</p><script type="math/tex; mode=display">({\frac{1}{2}})^{\frac{m}{2}} \sum_{i=0}^{\frac{m}{2}} {\frac{m}{2}\choose i}(2i+1)^{n}</script><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(x) debug&lt;&lt;<span class="meta-string">"***"</span>&lt;&lt;(x)&lt;&lt;endl</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line">LL n,m;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">ksm</span><span class="params">(LL a,LL b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL res=<span class="number">1</span>;</span><br><span class="line">    a%=mod;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) res=res*a%mod;</span><br><span class="line">        a=a*a%mod;</span><br><span class="line">        b=b&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;n,&amp;m);</span><br><span class="line">        LL ans=<span class="number">0</span>,C=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m/<span class="number">2</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans=(ans+C*ksm(<span class="number">2</span>*i+(m&amp;<span class="number">1</span>),n)%mod)%mod;</span><br><span class="line">            C=C*(m/<span class="number">2</span>-i)%mod*ksm(i+<span class="number">1</span>,mod<span class="number">-2</span>)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        ans=(ans*ksm(ksm(<span class="number">2</span>,mod<span class="number">-2</span>),m/<span class="number">2</span>))%mod;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
            <tag> 排列组合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CF757E-Bash Plays with Functions(积性函数+前缀和)</title>
      <link href="/2019/09/18/CF757E/"/>
      <url>/2019/09/18/CF757E/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>定义</p><script type="math/tex; mode=display">f_0(n)=\sum_{uv=n}1[gcd(u,v)==1] \\f_{r+1}(n)=\sum_{uv=n} \frac{f_r(u)+f_r(v)}{2}</script><p>有$q$个询问，给定$n$和$r$，求$f_r(n) \mod 1e9+7$</p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>首先计算$f_0(n)$，运用算数基本定理</p><script type="math/tex; mode=display">n=p_1^{\alpha_1}p_2^{\alpha_2}...p_k^{\alpha_k}</script><p>显然，当u取到若干个$p_i^{\alpha_i}$的乘积时，v取剩下的所有，这样就能保证gcd(u,v)==1</p><p>那么$f_0(n)={k\choose 0}+{k\choose 1}+…+{k\choose k}=2^k$，k为n的质因子个数</p><p>容易发现，$f_0(n)$是一个<strong>积性函数</strong></p><script type="math/tex; mode=display">\begin{aligned}f_{r+1}(n) =& \sum_{uv=n} \frac{f_r(u)+f_r(v)}{2} \\=& \sum_{d=1}^n \frac{f_r(d)+f_r(n/d)}{2} [d|n] \\=& \sum_{d|n} f_r(d)\end{aligned}</script><p>因为$f_0(n)$是积性函数，容易递推发现$f_r(n)$也是<strong>积性函数</strong></p><p>那么计算$f_r(n)$时只需考虑n的质因子就可以了</p><p>设$f[i][j]$表示$f_i(p^j)$，注意这题对于任意质数算出来的贡献都是等效的</p><p>代入上面的和式</p><script type="math/tex; mode=display">f[i][j] = \sum_{k=0}^j f[i-1][k]</script><p>暴力统计需要$O(20^2 n)$，可以用前缀和去掉一维，最后复杂度为$O(20n)$</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(x) debug&lt;&lt;<span class="meta-string">"***"</span>&lt;&lt;(x)&lt;&lt;endl</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> T,n,q,r;</span><br><span class="line"><span class="keyword">int</span> prime[maxn],mp[maxn];</span><br><span class="line"><span class="keyword">int</span> f[maxn][<span class="number">27</span>],sum[maxn][<span class="number">27</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;maxn;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!prime[i])</span><br><span class="line">            prime[++prime[<span class="number">0</span>]]=i,mp[i]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=prime[<span class="number">0</span>] &amp;&amp; <span class="number">1L</span>L*i*prime[j]&lt;maxn;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            prime[i*prime[j]]=<span class="number">1</span>;</span><br><span class="line">            mp[i*prime[j]]=prime[j];</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    f[<span class="number">0</span>][<span class="number">0</span>]=sum[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;<span class="number">27</span>;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        f[<span class="number">0</span>][j]=<span class="number">2</span>;</span><br><span class="line">        sum[<span class="number">0</span>][j]=(sum[<span class="number">0</span>][j<span class="number">-1</span>]+f[<span class="number">0</span>][j])%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;maxn;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        f[i][<span class="number">0</span>]=sum[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;<span class="number">27</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[i][j]=sum[i<span class="number">-1</span>][j];</span><br><span class="line">            sum[i][j]=(sum[i][j<span class="number">-1</span>]+f[i][j])%mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line">    <span class="keyword">while</span>(q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;r,&amp;n);</span><br><span class="line">        LL ans=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(n==<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">int</span> p=mp[n],cnt=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(n%p==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cnt++;</span><br><span class="line">                n/=p;</span><br><span class="line">            &#125;</span><br><span class="line">            ans=(ans*f[r][cnt])%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数论 </tag>
            
            <tag> 积性函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计蒜客-Triple(FFT)</title>
      <link href="/2019/09/17/jsk41400/"/>
      <url>/2019/09/17/jsk41400/</url>
      
        <content type="html"><![CDATA[<blockquote><p>The Preliminary Contest for ICPC Asia Shanghai 2019</p></blockquote><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给你三个长度为$n$的数组$A,B,C$，从每个数组中取出一个数，计算有多少对数满足<del>三角形定理</del>$(x+y \geq z)$</p><p>$1 \leq N \leq 10^5， 1 \leq x,y,z \leq 10^5$</p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>$n \leq 1000$时暴力$O(n^2)$统计</p><p>其他情况用FFT搞一搞：</p><p>分别以$A,B,C$为最大的边，也就是z，统计其他两组满足不等式的组合数</p><p>假设当前最大的边是$A$，那么将$B,C$卷积一下，卷积意义就是B和C加起来的数的组合对数</p><p>用FFT优化卷积计算后用前缀和统计即可</p><p>将A，B，C都搞了之后，要去掉一些不满足的情况(因为我们是以假设A,B,C为最大的边的情况)</p><script type="math/tex; mode=display">B>A \&\& C<A \\B<A \&\& C>A \\B>A \&\& C>A</script><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(x) debug&lt;&lt;<span class="meta-string">"***"</span>&lt;&lt;(x)&lt;&lt;endl</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> T,n,kase;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> val,id;</span><br><span class="line">    node(<span class="keyword">int</span> v=<span class="number">0</span>,<span class="keyword">int</span> d=<span class="number">0</span>) &#123;val=v;id=d;&#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp;a) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> val&lt;a.val;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;temp[<span class="number">3</span>*maxn];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y;</span><br><span class="line">    Complex (<span class="keyword">double</span> xx=<span class="number">0</span>,<span class="keyword">double</span> yy=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x=xx;y=yy;</span><br><span class="line">    &#125;</span><br><span class="line">    Complex <span class="keyword">operator</span> + (<span class="keyword">const</span> Complex &amp;b) <span class="keyword">const</span> &#123;<span class="keyword">return</span> Complex(x+b.x,y+b.y);&#125;</span><br><span class="line">    Complex <span class="keyword">operator</span> - (<span class="keyword">const</span> Complex &amp;b) <span class="keyword">const</span> &#123;<span class="keyword">return</span> Complex(x-b.x,y-b.y);&#125;</span><br><span class="line">    Complex <span class="keyword">operator</span> * (<span class="keyword">const</span> Complex &amp;b) <span class="keyword">const</span> &#123;<span class="keyword">return</span> Complex(x*b.x-y*b.y,x*b.y+y*b.x);&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reverse</span><span class="params">(Complex y[],<span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 0 n不需要交换 枚举1~n-1</span></span><br><span class="line">    <span class="comment">// i j总是二进制反转</span></span><br><span class="line">    <span class="keyword">int</span> i,j,k;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>,j=len/<span class="number">2</span>;i&lt;len<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;j) swap(y[i],y[j]);</span><br><span class="line">        k=len/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">while</span>(j&gt;=k)</span><br><span class="line">        &#123;</span><br><span class="line">            j-=k;</span><br><span class="line">            k/=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j&lt;k) j+=k;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// len必须是2的幂次 记得补零</span></span><br><span class="line"><span class="comment">// op为1做DFT -1做IDFT</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fft</span><span class="params">(Complex y[],<span class="keyword">int</span> len,<span class="keyword">int</span> op)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    reverse(y,len);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> h=<span class="number">2</span>;h&lt;=len;h*=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">Complex <span class="title">wn</span><span class="params">(<span class="built_in">cos</span>(-op*<span class="number">2</span>*PI/h),<span class="built_in">sin</span>(-op*<span class="number">2</span>*PI/h))</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len;j+=h)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function">Complex <span class="title">w</span><span class="params">(<span class="number">1</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=j;k&lt;j+h/<span class="number">2</span>;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                Complex u=y[k];</span><br><span class="line">                Complex t=w*y[k+h/<span class="number">2</span>];</span><br><span class="line">                y[k]=u+t;</span><br><span class="line">                y[k+h/<span class="number">2</span>]=u-t;</span><br><span class="line">                w=w*wn;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(op==<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) y[i].x/=len;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//--------------------------------------------------------------</span></span><br><span class="line"><span class="function">LL <span class="title">solve1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sort(a[<span class="number">0</span>]+<span class="number">1</span>,a[<span class="number">0</span>]+n+<span class="number">1</span>);</span><br><span class="line">    sort(a[<span class="number">1</span>]+<span class="number">1</span>,a[<span class="number">1</span>]+n+<span class="number">1</span>);</span><br><span class="line">    sort(a[<span class="number">2</span>]+<span class="number">1</span>,a[<span class="number">2</span>]+n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        temp[i]=node(a[<span class="number">0</span>][i],<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        temp[i+n]=node(a[<span class="number">1</span>][i],<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        temp[i+<span class="number">2</span>*n]=node(a[<span class="number">2</span>][i],<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">int</span> tot=<span class="number">3</span>*n;</span><br><span class="line">    sort(temp+<span class="number">1</span>,temp+<span class="number">1</span>+tot);</span><br><span class="line">    <span class="keyword">int</span> cnt[<span class="number">3</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    LL res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tot;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> val=temp[i].val;</span><br><span class="line">        <span class="keyword">int</span> id=temp[i].id;</span><br><span class="line">        <span class="keyword">int</span> id1=(id+<span class="number">1</span>)%<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">int</span> id2=(id+<span class="number">2</span>)%<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">int</span> tmp=cnt[id2];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt[id1];j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span>(tmp&gt;<span class="number">0</span> &amp;&amp; a[id1][j]+a[id2][tmp] &gt;= val) tmp--;</span><br><span class="line">            res+=cnt[id2]-tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        cnt[id]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当前id为最大边</span></span><br><span class="line">LL num[<span class="number">4</span>*maxn],sum[<span class="number">4</span>*maxn];</span><br><span class="line">Complex x1[<span class="number">4</span>*maxn],x2[<span class="number">4</span>*maxn];</span><br><span class="line"><span class="function">LL <span class="title">calc</span><span class="params">(<span class="keyword">int</span> id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> id1=(id+<span class="number">1</span>)%<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> id2=(id+<span class="number">2</span>)%<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        num[a[id1][i]]++;</span><br><span class="line">        tot=max(tot,a[id1][i]+<span class="number">1</span>);</span><br><span class="line">        tot=max(tot,a[id2][i]+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> len=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(len&lt;(tot&lt;&lt;<span class="number">1</span>)) len&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;tot;i++) x1[i]=Complex(num[i],<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=tot;i&lt;len;i++) x1[i]=Complex(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    fft(x1,len,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) num[a[id1][i]]--,num[a[id2][i]]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;tot;i++) x2[i]=Complex(num[i],<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=tot;i&lt;len;i++) x2[i]=Complex(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    fft(x2,len,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">        x1[i]=x1[i]*x2[i];</span><br><span class="line">    fft(x1,len,<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">        num[i]=(LL)(x1[i].x+<span class="number">0.5</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*tot;i++)</span><br><span class="line">        sum[i]=sum[i<span class="number">-1</span>]+num[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) num[i]=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        res+=sum[<span class="number">2</span>*tot]-sum[a[id][i]<span class="number">-1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">solve2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL res=<span class="number">0</span>;</span><br><span class="line">    res+=calc(<span class="number">0</span>);</span><br><span class="line">    res+=calc(<span class="number">1</span>);</span><br><span class="line">    res+=calc(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        temp[i]=node(a[<span class="number">0</span>][i],<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        temp[i+n]=node(a[<span class="number">1</span>][i],<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        temp[i+<span class="number">2</span>*n]=node(a[<span class="number">2</span>][i],<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">int</span> tot=<span class="number">3</span>*n;</span><br><span class="line">    sort(temp+<span class="number">1</span>,temp+<span class="number">1</span>+tot);</span><br><span class="line">    <span class="keyword">int</span> cnt[<span class="number">3</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tot;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> val=temp[i].val;</span><br><span class="line">        <span class="keyword">int</span> id=temp[i].id;</span><br><span class="line">        <span class="keyword">int</span> id1=(id+<span class="number">1</span>)%<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">int</span> id2=(id+<span class="number">2</span>)%<span class="number">3</span>;</span><br><span class="line">        res-=<span class="number">1L</span>L*(n-cnt[id1])*cnt[id2];</span><br><span class="line">        res-=<span class="number">1L</span>L*(n-cnt[id2])*cnt[id1];</span><br><span class="line">        res-=<span class="number">1L</span>L*(n-cnt[id1])*(n-cnt[id2]);</span><br><span class="line">        cnt[id]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[j][i]);</span><br><span class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">1000</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Case #%d: %lld\n"</span>,++kase,solve1());</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Case #%d: %lld\n"</span>,++kase,solve2());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计蒜客-K Sum(积性函数+杜教筛)</title>
      <link href="/2019/09/13/jsk41302/"/>
      <url>/2019/09/13/jsk41302/</url>
      
        <content type="html"><![CDATA[<blockquote><p>The Preliminary Contest for ICPC Asia Nanjing 2019</p></blockquote><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><script type="math/tex; mode=display">f_n(k)=\sum_{l_1=1}^n\sum_{l_2=1}^n...\sum_{l_k=1}^n(gcd(l_1,l_2,...,l_k))^2</script><p>Given $n(1\leq n \leq 10^9), k(2\leq k \leq 10^{10^5})$, please calculate</p><script type="math/tex; mode=display">\sum_{i=2}^k f_n(i) \pmod {10^9+7}</script><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><script type="math/tex; mode=display">f_n(k)=\sum_{l_1=1}^n\sum_{l_2=1}^n...\sum_{l_k=1}^n (gcd(l_1,l_2,...,l_k))^2 \\=\sum_{i=1}^n\sum_{l_1=1}^n\sum_{l_2=1}^n...\sum_{l_k=1}^n i^2[gcd(l_1,l_2,...,l_k)==i] \\=\sum_{i=1}^n i^2 \sum_{l_1=1}^{n/i}\sum_{l_2=1}^{n/i}...\sum_{l_k=1}^{n/i} [gcd(l_1,l_2,...,l_k)==1] \\=\sum_{i=1}^n i^2 \sum_{d=1}^{n/i} \mu(d)\sum_{l_1=1}^{n/id}\sum_{l_2=1}^{n/id}...\sum_{l_k=1}^{n/id} 1 \\=\sum_{i=1}^n i^2 \sum_{d=1}^{n/i} \mu(d) (\frac{n}{id})^k \\=\sum_{l=1}^n (\frac{n}{l})^k \sum_{d|l} \mu(d) (\frac{l}{d})^2</script><script type="math/tex; mode=display">\sum_{i=2}^k f_n(i)=\sum_{i=2}^k\sum_{l=1}^n (\frac{n}{l})^i \sum_{d|l} \mu(d) (\frac{l}{d})^2 \\=\sum_{l=1}^n(\sum_{i=2}^k (\frac{n}{l})^i) \sum_{d|l} \mu(d) (\frac{l}{d})^2 \\=\sum_{l=1}^n(\sum_{i=2}^k q^i) \sum_{d|l} \mu(d) (\frac{l}{d})^2 \\</script><p>前面那部分等比数列求和，外面整体分块，所以要求后面的前缀和$S(n)$，后面记为$g(l)=\sum_{d|l} \mu(d) (\frac{l}{d})^2$，则</p><script type="math/tex; mode=display">g(l)=(\mu * Id^2)(l)</script><script type="math/tex; mode=display">h(l)=(g*I)(l)=(\mu * Id^2 * I)(l)=Id^2(l)</script><script type="math/tex; mode=display">\sum_{i=1}^n h(i)=\sum_{i=1}^n\sum_{d|i} I(d)g(\frac{i}{d}) \\=\sum_{d=1}^n I(d) \sum_{i=1}^{n/d} g(i) \\=\sum_{d=1}^n I(d) S(n/d) \\=S(n)-\sum_{d=2}^n S(n/d)</script><script type="math/tex; mode=display">\sum_{i=1}^n h(i)=1^2+2^2+...+n^2=\frac{n(n+1)(2n+1)}{6}</script><script type="math/tex; mode=display">S(n)=\frac{n(n+1)(2n+1)}{6}-\sum_{d=2}^n S(n/d)</script><p>线形筛部分</p><script type="math/tex; mode=display">S(n)=\sum_{d|l} \mu(d)(\frac{l}{d})^2 \\S(1)=1,S(p)=p^2-1,S(p^k)=p^{2k-2}(p^2-1) \\if (i\%p==0),S(ip)=S(i)S(p) \\if (i\%p!=0),S(ip)=S(i/p^{a_1})S(p^{a_1+1}),S(i)=S(i/p^{a_1})S(p^{a_1}) \\S(p^{a_1+1})=p^{2(a_1+1)-2}(p^2-1)=[p^{2a_1-2}(p^2-1)]p^2=S(p^{a_1})p^2 \\S(ip)=S(i)p^2</script><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(x) debug&lt;&lt;<span class="meta-string">"***"</span>&lt;&lt;(x)&lt;&lt;endl</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e6</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line">LL n,k,kk;<span class="comment">//k:q!=1 kk:q=1</span></span><br><span class="line"><span class="keyword">char</span> str[<span class="number">100007</span>];</span><br><span class="line">LL prime[maxn+<span class="number">1</span>],sum1[maxn+<span class="number">1</span>];</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,LL&gt; sum2;</span><br><span class="line">LL inv6=<span class="number">166666668</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">ksm</span><span class="params">(LL a,LL b,LL c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL res=<span class="number">1</span>;</span><br><span class="line">    a%=c;</span><br><span class="line">    <span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) res=res*a%c;</span><br><span class="line">        a=a*a%c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_sum1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sum1[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=maxn;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!prime[i])</span><br><span class="line">            prime[++prime[<span class="number">0</span>]]=i,sum1[i]=(<span class="number">1L</span>L*i*i<span class="number">-1</span>)%mod;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=prime[<span class="number">0</span>] &amp;&amp; prime[j]&lt;=maxn/i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            prime[i*prime[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                sum1[i*prime[j]]=sum1[i]*prime[j]%mod*prime[j]%mod;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> sum1[i*prime[j]]=sum1[i]*sum1[prime[j]]%mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=maxn;i++)</span><br><span class="line">        sum1[i]=(sum1[i<span class="number">-1</span>]+sum1[i])%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">calc</span><span class="params">(LL q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(q==<span class="number">1</span>) <span class="keyword">return</span> (kk<span class="number">-1</span>+mod)%mod;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> q*q%mod*((ksm(q,k<span class="number">-1</span>,mod)<span class="number">-1</span>+mod)%mod)%mod*ksm(q<span class="number">-1</span>,mod<span class="number">-2</span>,mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">get_sum2</span><span class="params">(LL n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=maxn) <span class="keyword">return</span> sum1[n];</span><br><span class="line">    <span class="keyword">if</span>(sum2[n]) <span class="keyword">return</span> sum2[n];</span><br><span class="line">    LL l,r;</span><br><span class="line">    LL sum=n*(n+<span class="number">1</span>)%mod*(<span class="number">2</span>*n+<span class="number">1</span>)%mod*inv6%mod;</span><br><span class="line">    <span class="keyword">for</span>(l=<span class="number">2</span>;l&lt;=n;l=r+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r=n/(n/l);</span><br><span class="line">        sum=(sum-(r-l+<span class="number">1</span>)*get_sum2(n/l)%mod+mod)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum2[n]=sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    get_sum1();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %s"</span>,&amp;n,str+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> len=<span class="built_in">strlen</span>(str+<span class="number">1</span>);</span><br><span class="line">        k=kk=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            k=(k*<span class="number">10</span>+str[i]-<span class="string">'0'</span>)%(mod<span class="number">-1</span>);</span><br><span class="line">            kk=(kk*<span class="number">10</span>+str[i]-<span class="string">'0'</span>)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        LL l,r;</span><br><span class="line">        LL ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(l=<span class="number">1</span>;l&lt;=n;l=r+<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            r=n/(n/l);</span><br><span class="line">            ans=(ans+calc(n/l)*((get_sum2(r)-get_sum2(l<span class="number">-1</span>)+mod)%mod)%mod)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数论 </tag>
            
            <tag> 杜教筛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计蒜客-The Nth Item(广义斐波那契循环节+分块打表)</title>
      <link href="/2019/09/08/jsk41355/"/>
      <url>/2019/09/08/jsk41355/</url>
      
        <content type="html"><![CDATA[<blockquote><p>The 2019 Asia Nanchang First Round Online Programming Contest</p></blockquote><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><img src="https://kimiye.oss-cn-shanghai.aliyuncs.com/img/acm/jsk41355.jpg" align="center"></p><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>定义数列</p><script type="math/tex; mode=display">f(0)=0,f(1)=1</script><script type="math/tex; mode=display">f(n)=3*f(n-1)+2*f(i-2)</script><p>给$Q$次询问和$N_1$，每次计算$f(N_i)$，</p><p>$N<em>i=N</em>{i-1}\bigoplus f^2(N_{i-1})$</p><p>求</p><script type="math/tex; mode=display">f(N_1)\bigoplus f(N_2)\bigoplus f(N_3) ......f(N_Q)</script><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>只要求得每个$f(N_i)$，就能$O(q)$计算出答案</p><p>考虑计算$f(p)$，要较快得到的话显然要用到快速幂</p><script type="math/tex; mode=display">\left[\begin{matrix}f(p)\\f(p-1)\\\end{matrix} \right]=\left[\begin{matrix}3 & 2\\1 & 0\\\end{matrix} \right]^{p-1}\left[\begin{matrix}f(1)\\f(0)\\\end{matrix} \right]</script><p>但这样复杂度是$O(qlogn)$还是不行</p><p>考虑把指数降下来，怎么降呢？<strong>找循环节！</strong></p><p>暴力发现循环节是<code>loop=499122177</code></p><p>也就是说</p><script type="math/tex; mode=display">A^x=A^{x+k*loop}</script><p>现在求一次$f(n)$的复杂度是$O(log(loop))$了</p><p>然鹅又发现这个快速幂的底数是固定的，意思就是我们可以用<strong>光速幂</strong></p><p>具体做法类似于分块</p><p>预处理出</p><script type="math/tex; mode=display">A^0，A^1，A^2，......，A^{\sqrt{loop}}</script><script type="math/tex; mode=display">A^{0\sqrt{loop}}，A^{1\sqrt{loop}}，A^{2\sqrt{loop}}，......，A^{\sqrt{loop}\sqrt{loop}}</script><p>这样当我们要求$A^p$时，计算$p/\sqrt{loop}$得到p属于的大块，用该大块的左端点乘上p与左端点的差就能得到了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> block=n/maxm;</span><br><span class="line">Mat res=mul(fac2[block],fac1[n-block*maxm]);</span><br></pre></td></tr></table></figure><p>这样就可以$O(1)$得到答案了！</p><p>所以最终复杂度为$O(q)$</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e7</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxm = <span class="number">23007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> LL mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">const</span> LL loop = <span class="number">499122177</span>;</span><br><span class="line"><span class="keyword">int</span> Matn=<span class="number">2</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Mat</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    LL a[<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line">&#125;;</span><br><span class="line">Mat base,ff,ones;</span><br><span class="line">Mat fac1[maxm+<span class="number">1</span>],fac2[maxm+<span class="number">1</span>];</span><br><span class="line">LL lasta,ans,n;</span><br><span class="line"><span class="keyword">int</span> q;</span><br><span class="line"><span class="function">Mat <span class="title">mul</span><span class="params">(Mat x,Mat y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Mat res;</span><br><span class="line">    <span class="built_in">memset</span>(res.a,<span class="number">0</span>,<span class="keyword">sizeof</span>(res.a));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;Matn;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;Matn;j++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;Matn;k++)</span><br><span class="line">        res.a[i][j]=(res.a[i][j]+x.a[i][k]*y.a[k][j])%mod;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ones=&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    base=&#123;<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    fac1[<span class="number">0</span>]=fac2[<span class="number">0</span>]=ones;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=maxm;i++)</span><br><span class="line">        fac1[i]=mul(fac1[i<span class="number">-1</span>],base);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=maxm;i++)</span><br><span class="line">        fac2[i]=mul(fac2[i<span class="number">-1</span>],fac1[maxm]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">calc</span><span class="params">(LL n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=n%(loop<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">int</span> block=n/maxm;</span><br><span class="line">    Mat res=mul(fac2[block],fac1[n-block*maxm]);</span><br><span class="line">    <span class="keyword">return</span> res.a[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %lld"</span>,&amp;q,&amp;n);</span><br><span class="line">    lasta=ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        n=n^(lasta*lasta);</span><br><span class="line">        lasta=calc(n<span class="number">-1</span>);</span><br><span class="line">        ans^=lasta;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数论 </tag>
            
            <tag> 矩阵 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hdu6706-huntian oy(杜教筛)</title>
      <link href="/2019/08/27/hdu6706/"/>
      <url>/2019/08/27/hdu6706/</url>
      
        <content type="html"><![CDATA[<blockquote><p>2019CCPC网络赛1005<br>让我入门杜教筛的题。。。</p></blockquote><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给你$n,a,b (1 \leq n,a,b \leq 10^9，gcd(a,b)=1)$计算</p><script type="math/tex; mode=display">\sum_{i=1}^n\sum_{j=1}^igcd(i^a-j^a,i^b-j^b)[gcd(i,j)==1]\pmod{1e9+7}</script><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>首先<del>证明</del>(打表)</p><script type="math/tex; mode=display">gcd(i^a-j^a,i^b-j^b)=i-j</script><p>证明过程：</p><p><img src="https://kimiye.oss-cn-shanghai.aliyuncs.com/img/acm/hdu6706.jpg" align="center"></p><p>重点在于证明</p><script type="math/tex; mode=display">gcd(a^n-b^n,a^m-b^m)=gcd(a^r-b^r,a^m-b^m)</script><p>这跟扩展欧几里得的过程很相似，继续迭代计算就会得到</p><script type="math/tex; mode=display">a^{gcd(n,m)}-b^{gcd(n,m)}</script><p>又因为题目$gcd(n,m)=1$，所以就变成求</p><script type="math/tex; mode=display">\sum_{i=1}^n\sum_{j=1}^i i-j[gcd(i,j)==1]</script><p>拆开</p><script type="math/tex; mode=display">\sum_{i=1}^n\sum_{j=1}^i i - \sum_{i=1}^n\sum_{j=1}^ij</script><p>前面那部分显然等于（欧拉函数定义）</p><script type="math/tex; mode=display">\sum_{i=1}^n i\varphi(i)</script><p>前面那部分又能根据欧拉函数的性质变成</p><script type="math/tex; mode=display">\sum_{i=1}^n \frac{i\varphi(i)}{2}+[i==1]</script><p>合并一下</p><script type="math/tex; mode=display">ans=\frac{\sum_{i=1}^ni\varphi(i)-1}{2}</script><p>所以问题主要是求</p><script type="math/tex; mode=display">f(n)=\sum_{i=1}^ni\varphi(i)</script><p>将$f(n)$和$id(n)$狄利克雷卷积一下</p><script type="math/tex; mode=display">(f*id)(n)=\sum_{d|n}df(\frac{n}{d})=\sum_{d|n}d\frac{n}{d}\varphi(\frac{n}{d})=n\sum_{d|n}\varphi(\frac{n}{d})</script><p>后面那个东西又有一个性质。。。</p><script type="math/tex; mode=display">\sum_{d|n}\varphi(\frac{n}{d})=n</script><p>所以</p><script type="math/tex; mode=display">(f*id)(n)=n^2</script><script type="math/tex; mode=display">S(n)=1^2+2^2+...+n^2=\frac{n(n+1)(2n+1)}{6}</script><script type="math/tex; mode=display">\sum_{d=1}^n\sum_{d|n}df(\frac{n}{d})=\frac{n(n+1)(2n+1)}{6}</script><script type="math/tex; mode=display">\sum_{d=1}^nd\sum_{i=1}^{n/d}f(i)=\frac{n(n+1)(2n+1)}{6}</script><script type="math/tex; mode=display">\sum_{d=1}^ndS(n/d)=\frac{n(n+1)(2n+1)}{6}</script><p>最后</p><script type="math/tex; mode=display">S(n)=\frac{n(n+1)(2n+1)}{6}-\sum_{d=2}^ndS(n/d)</script><p>用分块+杜教筛可以$O(n^{2/3})$求得$S(n)$</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(x) cout&lt;&lt;<span class="meta-string">"***"</span>&lt;&lt;(x)&lt;&lt;endl</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> T,n,a,b;</span><br><span class="line"><span class="keyword">int</span> prime[maxn+<span class="number">1</span>],phi[maxn+<span class="number">1</span>];</span><br><span class="line">LL S1[maxn+<span class="number">1</span>];</span><br><span class="line"><span class="built_in">unordered_map</span>&lt;LL,LL&gt; S2;</span><br><span class="line"><span class="keyword">const</span> LL inv2 = <span class="number">500000004</span>;</span><br><span class="line"><span class="keyword">const</span> LL inv6 = <span class="number">166666668</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_phi</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    phi[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=maxn;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!prime[i])</span><br><span class="line">        &#123;</span><br><span class="line">            prime[++prime[<span class="number">0</span>]]=i;</span><br><span class="line">            phi[i]=i<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=prime[<span class="number">0</span>] &amp;&amp; prime[j]&lt;=maxn/i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            prime[i*prime[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                phi[i*prime[j]]=phi[i]*prime[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> phi[i*prime[j]]=phi[i]*(prime[j]<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=maxn;i++)</span><br><span class="line">        S1[i]=(S1[i<span class="number">-1</span>]+<span class="number">1L</span>L*i*phi[i]%mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">get_s</span><span class="params">(LL n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=maxn) <span class="keyword">return</span> S1[n];</span><br><span class="line">    <span class="keyword">if</span>(S2[n]) <span class="keyword">return</span> S2[n];</span><br><span class="line">    LL res=n*(n+<span class="number">1</span>)%mod*(<span class="number">2</span>*n+<span class="number">1</span>)%mod*inv6%mod;</span><br><span class="line">    LL l,r,temp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(l=<span class="number">2</span>;l&lt;=n;l=r+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r=n/(n/l);</span><br><span class="line">        temp=(temp+(l+r)*(r-l+<span class="number">1</span>)%mod*inv2%mod*get_s(n/l)%mod)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    S2[n]=(res-temp+mod)%mod;</span><br><span class="line">    <span class="keyword">return</span> S2[n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    get_phi();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;n,&amp;a,&amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(get_s(n)<span class="number">-1</span>+mod)%mod*inv2%mod);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数论 </tag>
            
            <tag> 杜教筛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>51nod1773-A国的贸易(FWT)</title>
      <link href="/2019/08/21/51nod1773/"/>
      <url>/2019/08/21/51nod1773/</url>
      
        <content type="html"><![CDATA[<blockquote><p>FWT（快速沃尔什变换模板题）</p></blockquote><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>A国是一个神奇的国家。</p><p>这个国家有 2n 个城市，每个城市都有一个独一无二的编号 ，编号范围为0~2n-1。</p><p>A国的神奇体现在，他们有着神奇的贸易规则。</p><p>当两个城市u，v的编号满足calc（u，v）=1的时候，这两个城市才可以进行贸易（即有一条边相连）。</p><p>而calc（u，v）定义为u，v按位异或的结果的二进制表示中数字1的个数。</p><p>ex：</p><p>calc（1,2）=2         ——&gt; 01 xor 10 = 11</p><p>calc（100,101）=1 ——&gt; 0110,0100 xor 0110,0101 = 1</p><p>calc（233,233）=0 ——&gt; 1110,1001 xor 1110,1001 = 0</p><p>每个城市开始时都有不同的货物存储量。</p><p>而贸易的规则是：</p><p>每过一天，可以交易的城市之间就会交易一次。</p><p>在每次交易中，当前城市u中的每个货物都将使所有与当前城市u有贸易关系的城市货物量 +1 。</p><p>请问 t 天后，每个城市会有多少货物。</p><p>答案可能会很大，所以请对1e9+7取模。</p></blockquote><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给你$2^n$个城市，每个城市有$a_i$个货物，每天当且仅当满足$count(i \bigoplus j)=1$的两个城市$i，j$</p><p>$i$增加$a_j$个货物，$j$增加$a_i$个货物</p><p>$count(i)$表示$i$的二进制中1的个数</p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>对于一个城市，经过一天交易后货物变为</p><script type="math/tex; mode=display">a_i=a_i+\sum_{i\bigoplus j=2^k}a_j</script><p>$2^k$的二进制一定是只含有一个1的表示</p><p>变形一下</p><script type="math/tex; mode=display">a_i=a_i+\sum_{j\bigoplus 2^k=i}a_j</script><p>$i$是定值，满足$i\bigoplus j=k$的FWT形式，卷积一下</p><script type="math/tex; mode=display">a_i=\sum a_i \ast b_i</script><p>上式是一天的结果，$t$天后的货物就变为</p><script type="math/tex; mode=display">a_i=\sum a_i \ast b_i^t</script><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = (<span class="number">1</span>&lt;&lt;<span class="number">20</span>)+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line"><span class="keyword">int</span> n,t;</span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn],inv2;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="keyword">inline</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)&#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">if</span>(x&lt;<span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>),x=-x;</span><br><span class="line">     <span class="keyword">if</span>(x&gt;<span class="number">9</span>) write(x/<span class="number">10</span>);</span><br><span class="line">     <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">ksm</span><span class="params">(LL a,LL b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) res=res*a%mod;</span><br><span class="line">        a=a*a%mod;</span><br><span class="line">        b=b&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FWT_xor</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> *a,<span class="keyword">int</span> opt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i&lt;&lt;=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> p=i&lt;&lt;<span class="number">1</span>,j=<span class="number">0</span>;j&lt;n;j+=p)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;i;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> X=a[j+k],Y=a[i+j+k];</span><br><span class="line">                a[j+k]=(X+Y)%mod;a[i+j+k]=(X-Y+mod)%mod;</span><br><span class="line">                <span class="keyword">if</span>(opt==<span class="number">-1</span>)a[j+k]=<span class="number">1L</span>L*a[j+k]*inv2%mod,a[i+j+k]=<span class="number">1L</span>L*a[i+j+k]*inv2%mod;</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    inv2 = ksm(<span class="number">2</span>,mod<span class="number">-2</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,inv2);</span><br><span class="line">    n=read();t=read();</span><br><span class="line">    <span class="comment">//scanf("%d %d",&amp;n,&amp;t);</span></span><br><span class="line">    n=(<span class="number">1</span>&lt;&lt;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        a[i]=read();</span><br><span class="line">    <span class="comment">//scanf("%d",&amp;a[i]);</span></span><br><span class="line">    b[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i&lt;&lt;=<span class="number">1</span>)</span><br><span class="line">        b[i]=<span class="number">1</span>;</span><br><span class="line">    FWT_xor(n,a,<span class="number">1</span>);</span><br><span class="line">    FWT_xor(n,b,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        b[i]=ksm(b[i],t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        a[i]=<span class="number">1L</span>L*a[i]*b[i]%mod;</span><br><span class="line">    FWT_xor(n,a,<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        write(a[i]);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">' '</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    <span class="comment">//printf("%d ",a[i]);</span></span><br><span class="line">    <span class="comment">//printf("\n");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3.添加评论系统+自定义404抓猫游戏界面</title>
      <link href="/2019/08/17/hexo3/"/>
      <url>/2019/08/17/hexo3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>受chrome无法正常访问网页时弹出的游戏界面启发，决定在自己博客的404页面上也放一个小游戏<br>并顺带给博客添加评论系统</p></blockquote><a id="more"></a><h2 id="添加评论系统"><a href="#添加评论系统" class="headerlink" title="添加评论系统"></a>添加评论系统</h2><p>试了几款评论插件后，发现还是Valine最好用</p><p>现在简要介绍安装过程</p><p>1.由于新版的hexo已经装好了Valine插件，没有的话就度娘一下怎么装吧。。。。</p><p>2.去<a href="http://leancloud.cn" target="_blank" rel="noopener">leancloud.cn</a>注册一下账户，并完成认证</p><p>3.创建一个应用，在应用中的设置界面中找到【应用Key】</p><p>4.打开在next目录下config文件，找到【Valine】</p><p>5.将【enable】改成true，【App ID】和【App Key】填写刚才找到的应用Key</p><h2 id="自定义404游戏界面"><a href="#自定义404游戏界面" class="headerlink" title="自定义404游戏界面"></a>自定义404游戏界面</h2><p>当非法访问博客网页时，都会跳转到404界面</p><p>例如</p><p><a href="http://www.kimiye.xyz/dfsfsdfsdfsdf">www.kimiye.xyz/dfsfsdfsdfsdf</a></p><p><a href="http://www.kimiye.xyz/dfs??????????">www.kimiye.xyz/dfs??????????</a></p><p><a href="http://www.kimiye.xyz/categories/ACM/324234">www.kimiye.xyz/categories/ACM/324234</a></p><p>404界面默认是github或者codingme的</p><p>接下来简要介绍</p><p>1.在博客的【source】目录下新建【404.html】</p><p>2.打开【404.html】，在里面填写自己想要的html代码</p><p>3.如果不想要next主题渲染，在【404.html】顶部加上</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>以下是我的404.html代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout: false</span><br><span class="line">---</span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#game</span> &#123;</span></span><br><span class="line">width: 100%;</span><br><span class="line">margin-top: 32px;</span><br><span class="line">text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#msg</span> &#123;</span></span><br><span class="line">width: 100%;</span><br><span class="line">text-align: center;</span><br><span class="line">font-size: 70px;</span><br><span class="line">font-family: PingFang SC, Helvetica Neue, Hiragino Sans GB, Segoe UI, Microsoft YaHei, sans-serif</span><br><span class="line">font-weight: bold;</span><br><span class="line"><span class="css"><span class="selector-tag">color</span>: <span class="selector-id">#4f565f</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.kimiye.xyz/projects/CatchTheCat/phaser.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.kimiye.xyz/projects/CatchTheCat/catch-the-cat.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"game"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.game = <span class="keyword">new</span> CatchTheCatGame(&#123;</span></span><br><span class="line">w: 10,</span><br><span class="line">h: 10,</span><br><span class="line">r: 20,</span><br><span class="line">backgroundColor: 0xffffff,</span><br><span class="line"><span class="actionscript">parent: <span class="string">'game'</span>,</span></span><br><span class="line"><span class="actionscript">statusBarAlign: <span class="string">'center'</span>,</span></span><br><span class="line"><span class="actionscript">credit: <span class="string">'kimiye'</span></span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"msg"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>糟糕，404了！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.52pojie.cn/" target="_blank" rel="noopener">吾爱破解</a>404界面</p><p><a href="https://github.com/ganlvtech/phaser-catch-the-cat" target="_blank" rel="noopener">https://github.com/ganlvtech/phaser-catch-the-cat</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo瞎玩系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>noj2379-Beat the Monster(期望dp+滚动数组)</title>
      <link href="/2019/08/13/noj2379/"/>
      <url>/2019/08/13/noj2379/</url>
      
        <content type="html"><![CDATA[<blockquote><p>2019南京多校1</p></blockquote><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>LYA is playing a RPG game and he needs to kill a monster. The monster’s health is <code>h</code>, LYA’s attack <code>is</code> a and the monster’s defence is <code>d</code>. So every time the monster’s health will decrease <code>a−d</code>. And each time LYA has a <code>p/q</code> probability to trigger a critical hit, which will double LYA’s attack, and the monster’s health will decrease <code>2a−d</code>.</p><p>Since the monster has a huge health, he wants you to help him find out the expectation of the time he need to kill the monster.</p></blockquote><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>怪兽的血量是$h$，防御是$d$</p><p>LYA的攻击是$a$，暴击率是$\frac{p}{q}$</p><p>不暴击时造成$a-d$伤害，暴击造成$2a-d$伤害</p><p>问把怪兽砍死的次数的期望是多少？($mod=1e7+19$)</p><p>$1 \leq h \leq 5e7，0 \leq d \lt a \leq 1e5， 1 \leq p \leq q \leq 1e7$</p><a id="more"></a><p>很容易想出一个一维的线性dp,</p><p>$dp[i]=dp[i+a-d]<em>(1-P) + dp[i+2a-d]</em>P + 1$</p><p>然而这样数组要开到5e7，会MLE</p><p>注意到</p><p>$dp[i]$是由$dp[i+a-d]、dp[i+2a-d]$转移而来，上界最高比i多2a-d</p><p>所以可以用滚动数组优化至2e5的空间（具体做法取模即可）</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>代码：(逆推)<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e7</span>+<span class="number">19</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line">LL h,a,d,p,q;</span><br><span class="line">LL dp[<span class="number">2</span>*maxn];</span><br><span class="line"><span class="function">LL <span class="title">ksm</span><span class="params">(LL a,LL b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) res=res*a%mod;</span><br><span class="line">        a=a*a%mod;</span><br><span class="line">        b=b&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;h&gt;&gt;a&gt;&gt;d&gt;&gt;p&gt;&gt;q;</span><br><span class="line">    LL P=p*ksm(q,mod<span class="number">-2</span>)%mod;</span><br><span class="line">    LL M=<span class="number">200007</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=h<span class="number">-1</span>;i&gt;=h-a+d;i--) dp[i%M]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=h-a+d<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        dp[i%M]=(dp[(i+a-d)%M]*(<span class="number">1</span>-P+mod)%mod+dp[(i+<span class="number">2</span>*a-d)%M]*P%mod+<span class="number">1</span>)%mod;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dp[<span class="number">0</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>标程(正推)<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e7</span>+<span class="number">19</span>;</span><br><span class="line">ll h,a,d,p,q;</span><br><span class="line">ll dp[maxn];</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll a,ll b)</span> </span>&#123;</span><br><span class="line">ll ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(b) &#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans = ans*a%mod;</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">a=a*a%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld%lld%lld"</span>,&amp;h,&amp;a,&amp;d,&amp;p,&amp;q);</span><br><span class="line">ll P = p*qpow(q,mod<span class="number">-2</span>)%mod;</span><br><span class="line">ll P_ = (<span class="number">1</span>-P+mod)%mod;</span><br><span class="line">dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(h&lt;=a-d) &#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"1"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=a-d;i++) dp[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> pos=a-d;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=a-d+<span class="number">1</span>;i&lt;=h;i++)&#123;</span><br><span class="line">pos++;</span><br><span class="line"><span class="keyword">if</span>(pos==maxn) pos = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> pre = pos-a+d;</span><br><span class="line"><span class="keyword">if</span>(pre&lt;<span class="number">0</span>) pre += maxn;</span><br><span class="line">dp[pos] = <span class="number">1</span> + P_*dp[pre];</span><br><span class="line"><span class="keyword">if</span>(i<span class="number">-2</span>*a+d&gt;=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> pre = pos<span class="number">-2</span>*a+d;</span><br><span class="line"><span class="keyword">if</span>(pre&lt;<span class="number">0</span>) pre += maxn;</span><br><span class="line">dp[pos] += P*dp[pre];</span><br><span class="line">&#125;</span><br><span class="line">dp[pos] %= mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dp[pos]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bzoj2154-Crash的数字表格(莫比乌斯反演)</title>
      <link href="/2019/08/13/bzoj2154/"/>
      <url>/2019/08/13/bzoj2154/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>今天的数学课上，Crash小朋友学习了最小公倍数(Least Common Multiple)。对于两个正整数a和b，LCM(a, b)表示能同时被a和b整除的最小正整数。例如，LCM(6, 8) = 24。回到家后，Crash还在想着课上学的东西，为了研究最小公倍数，他画了一张N <em> M的表格。每个格子里写了一个数字，其中第i行第j列的那个格子里写着数为LCM(i, j)。一个4 </em> 5的表格如下： 1 2 3 4 5 2 2 6 4 10 3 6 3 12 15 4 4 12 4 20 看着这个表格，Crash想到了很多可以思考的问题。不过他最想解决的问题却是一个十分简单的问题：这个表格中所有数的和是多少。当N和M很大时，Crash就束手无策了，因此他找到了聪明的你用程序帮他解决这个问题。由于最终结果可能会很大，Crash只想知道表格里所有数的和mod 20101009的值。</p></blockquote><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>计算$\sum<em>{i=1}^n \sum</em>{j=1}^m lcm(i,j) \pmod {20101009}$</p><p>$N,M \leq 1e7$</p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>暴力1e14肯定GG了</p><p>那么首先可以化为(假定$n\leq m$)</p><script type="math/tex; mode=display">\sum_{i=1}^n \sum_{j=1}^m \frac{ij}{gcd(i,j)} \\\sum_{d=1}^n \sum_{i=1}^n \sum_{j=1}^m [gcd(i,j)==d]\frac{ij}{d} \\\sum_{d=1}^n \sum_{i=1}^{n/d} \sum_{j=1}^{m/d} [gcd(i,j)==1]\frac{idjd}{d} \\\sum_{d=1}^n \sum_{i=1}^{n/d} \sum_{j=1}^{m/d} [gcd(i,j)==1]ijd \\\sum_{d=1}^{n}d \sum_{i=1}^{n/d} \sum_{j=1}^{m/d} [gcd(i,j)==1]ij</script><p>后面那部分继续化简</p><p>设</p><script type="math/tex; mode=display">f(d)= \sum_{i=1}^x \sum_{j=1}^y [gcd(i,j)==d]ij</script><p>则</p><script type="math/tex; mode=display">F(d)= \sum_{i=1}^x \sum_{j=1}^y [d|gcd(i,j)]ij \\F(d)= d^2 \sum_{i=1}^{x/d} \sum_{j=1}^{y/d} [1|gcd(i,j)]ij \\\sum_{i=1}^{x} \sum_{j=1}^{y} [1|gcd(i,j)]ij = \frac{(1+x)x}{2}\frac{(1+y)y}{2}</script><p>所以根据莫比乌斯反演公式</p><script type="math/tex; mode=display">f(1)=\sum_{i=1}^x \mu(i)i^2F(x/i)</script><p>那么目前答案就是（$x=n/d$）</p><script type="math/tex; mode=display">\sum_{d=1}^n d f(1) = \sum_{d=1}^n d \sum_{i=1}^{x} \mu(d)d^2F(x/d)</script><p>对求d和f(1)数论分块，因此总复杂度还是$O(\sqrt n \sqrt n)=O(n)$的</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e7</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">20101009</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> prime[maxn+<span class="number">1</span>],mu[maxn+<span class="number">1</span>],sum[maxn+<span class="number">1</span>];</span><br><span class="line">LL ans;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>((ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&amp;&amp;ch!=<span class="string">'-'</span>)ch=getchar();</span><br><span class="line">    <span class="keyword">if</span>(ch==<span class="string">'-'</span>)t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;=<span class="string">'9'</span>&amp;&amp;ch&gt;=<span class="string">'0'</span>)x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_mu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mu[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=maxn;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!prime[i])</span><br><span class="line">        &#123;</span><br><span class="line">            prime[++prime[<span class="number">0</span>]]=i;</span><br><span class="line">            mu[i]=<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=prime[<span class="number">0</span>] &amp;&amp; prime[j]&lt;=maxn/i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            prime[prime[j]*i]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">else</span> mu[prime[j]*i]=-mu[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">calc</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    LL res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(l=<span class="number">1</span>;l&lt;=x;l=r+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r=min(x/(x/l),y/(y/l));</span><br><span class="line">        LL sumf=((<span class="number">1L</span>L*(<span class="number">1</span>+x/l)*(x/l)/<span class="number">2</span>%mod)*(<span class="number">1L</span>L*(<span class="number">1</span>+y/l)*(y/l)/<span class="number">2</span>%mod))%mod;</span><br><span class="line">        res=(res+<span class="number">1L</span>L*(sum[r]-sum[l<span class="number">-1</span>]+mod)%mod*sumf%mod)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    get_mu();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">if</span>(n&gt;m) swap(n,m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="comment">// 放在get_mu里会T</span></span><br><span class="line">        sum[i]=(sum[i<span class="number">-1</span>]+<span class="number">1L</span>L*mu[i]*i%mod*i%mod)%mod;</span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    <span class="keyword">for</span>(l=<span class="number">1</span>;l&lt;=n;l=r+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r=min(n/(n/l),m/(m/l));</span><br><span class="line">        LL sumd=<span class="number">1L</span>L*(l+r)*(r-l+<span class="number">1</span>)/<span class="number">2</span>%mod;</span><br><span class="line">        ans=(ans+sumd*calc(n/l,m/l)%mod)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数论 </tag>
            
            <tag> 莫比乌斯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hdu3579-Hello Kiki(拓展中国剩余定理)</title>
      <link href="/2019/08/02/hdu3579/"/>
      <url>/2019/08/02/hdu3579/</url>
      
        <content type="html"><![CDATA[<blockquote><p>2019个人综合赛3</p></blockquote><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>One day I was shopping in the supermarket. There was a cashier counting coins seriously when a little kid running and singing “门前大桥下游过一群鸭，快来快来 数一数，二四六七八”. And then the cashier put the counted coins back morosely and count again…</p><p>Hello Kiki is such a lovely girl that she loves doing counting in a different way. For example, when she is counting X coins, she count them N times. Each time she divide the coins into several same sized groups and write down the group size Mi and the number of the remaining coins Ai on her note.One day Kiki’s father found her note and he wanted to know how much coins Kiki was counting.</p></blockquote><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>有一个数x，满足x%m[1]=a[1],x%m[2]=a[2]…..x%m[n]=a[n]</p><p>给你m[]和a[],</p><p>要你找出满足这n个条件的最小正整数x</p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>裸的中国剩余定理模板</p><p>只不过这边m没有两两互质，但可以将中国剩余定理拓展一下</p><p>这边就主要讲解一下拓展思想</p><p>取出2个同余方程，</p><script type="math/tex; mode=display">x \equiv a[1] \pmod {m[1]} \\x \equiv a[2] \pmod {m[2]}</script><p>等价于</p><script type="math/tex; mode=display">x = k_1m[1]+a[1] \\x = k_2m[2]+a[2]</script><p>两式相减得</p><script type="math/tex; mode=display">-k_1m[1]+k_2m[2] = a[1]-a[2]</script><p>看成</p><script type="math/tex; mode=display">ax+by = c</script><p>解出最小的x和y，回代回去得到新的有关x的同余方程，</p><p>注意这边2个方程变成了1个，继续往下再找新的方程重复算法直至结束</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(x) printf(<span class="meta-string">"***%d\n"</span>,(x))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">gcd</span><span class="params">(LL a,LL b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">exgcd</span><span class="params">(LL a,LL b,LL &amp;x,LL &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x=<span class="number">1</span>,y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    LL d=exgcd(b,a%b,x,y);</span><br><span class="line">    LL z=x;x=y;y=z-y*(a/b);</span><br><span class="line">    <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> flag;<span class="comment">//false为无解</span></span><br><span class="line"><span class="function">LL <span class="title">exChina</span><span class="params">(LL n,LL *m,LL *a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    flag=<span class="literal">true</span>;</span><br><span class="line">    LL M=m[<span class="number">1</span>],ans=a[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        LL c=a[i]-ans;</span><br><span class="line">        LL d,x,y;</span><br><span class="line">        d=exgcd(M,m[i],x,y);</span><br><span class="line">        <span class="keyword">if</span>(c%d) &#123;flag=<span class="literal">false</span>;<span class="keyword">return</span> <span class="number">-1</span>;&#125;</span><br><span class="line">        LL k=m[i]/d;</span><br><span class="line">        x=((c/d*x)%k+k)%k;</span><br><span class="line">        ans=ans+M*x;</span><br><span class="line">        M=M*k;</span><br><span class="line">        ans%=M;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (ans+M)%M;</span><br><span class="line">&#125;</span><br><span class="line">LL T,n,kase;</span><br><span class="line">LL a[maxn],m[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;m[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">        LL ans=exChina(n,m,a);</span><br><span class="line">        <span class="keyword">if</span>(ans==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">                ans=max(ans,m[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %lld: "</span>,++kase);</span><br><span class="line">        <span class="keyword">if</span>(!flag)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CF364D-Ghd(随机算法)</title>
      <link href="/2019/08/02/CF364D/"/>
      <url>/2019/08/02/CF364D/</url>
      
        <content type="html"><![CDATA[<blockquote><p>2019个人综合赛3</p></blockquote><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>John Doe offered his sister Jane Doe find the gcd of some set of numbers a.</p></blockquote><p>Gcd is a positive integer g, such that all number from the set are evenly divisible by g and there isn’t such g’ (g’ &gt; g), that all numbers of the set are evenly divisible by g’.</p><p>Unfortunately Jane couldn’t cope with the task and John offered her to find the ghd of the same subset of numbers.</p><p>Ghd is a positive integer g, such that at least half of numbers from the set are evenly divisible by g and there isn’t such g’ (g’ &gt; g) that at least half of the numbers from the set are evenly divisible by g’.</p><p>Jane coped with the task for two hours. Please try it, too.</p><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给你n个数，要你找到ghd（满足超过1半的数的最大的gcd）</p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>首先要知道ghd一定是某个数的因子！！！</p><p>那么就可以随机选择一个数<code>x</code>，枚举出它的因子，存放在factor[]中，</p><p>然后计算出其他数与<code>x</code>的gcd，这个gcd一定也在factor[]中，</p><p>我们需要统计某个因子的次数，</p><p>那么可以将factor[]排序后二分查找统计个数，</p><p>然后需要注意的是，若有2个因子i和j</p><p>若j是i的倍数，那么统计因子i的个数时，能整除j的数也一定能整除i</p><p>所以cnt[i]+=cnt[j]</p><p>最后扫一遍所有因子，若有2*cnt[i]&gt;=n的就更新ans</p><p>tips:</p><p>取随机数时需要取2次随机数（随便怎么做计算好像都行），只取1次的话容易wa，（玄学~~~）</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line"><span class="keyword">int</span> T,n;</span><br><span class="line">LL a[maxn],ans;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">gcd</span><span class="params">(LL a,LL b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line">LL factor[maxn],tot,cnt[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL x=a[(<span class="number">1L</span>L*rand()*<span class="number">6666</span>+rand())%n+<span class="number">1</span>];</span><br><span class="line">    tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(LL i=<span class="number">1</span>;i*i&lt;=x;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(x%i==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            factor[++tot]=i;</span><br><span class="line">            <span class="keyword">if</span>(i*i!=x)</span><br><span class="line">                factor[++tot]=x/i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(factor+<span class="number">1</span>,factor+tot+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tot;i++) cnt[i]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        cnt[lower_bound(factor+<span class="number">1</span>,factor+tot+<span class="number">1</span>,gcd(x,a[i]))-factor]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tot;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=tot;j++)</span><br><span class="line">            <span class="keyword">if</span>(factor[j]%factor[i]==<span class="number">0</span>)</span><br><span class="line">                cnt[i]+=cnt[j];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tot;i++)</span><br><span class="line">        <span class="keyword">if</span>(cnt[i]*<span class="number">2</span>&gt;=n)</span><br><span class="line">            ans=max(ans,factor[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    srand(time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)</span><br><span class="line">        solve();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CF961D-Pair Of Lines(计算几何+叉积)</title>
      <link href="/2019/08/02/CF961D/"/>
      <url>/2019/08/02/CF961D/</url>
      
        <content type="html"><![CDATA[<blockquote><p>2019个人综合赛3</p></blockquote><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>You are given n points on Cartesian plane. Every point is a lattice point (i. e. both of its coordinates are integers), and all points are distinct.</p><p>You may draw two straight lines (not necessarily distinct). Is it possible to do this in such a way that every point lies on at least one of these lines?</p></blockquote><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>在平面上给你<code>n</code>个点，问存不存在2条直线（可以重合），能使得这所有点都至少在一条直线上</p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>解题关键：不在一条直线上的3点，用2条直线就能穿过他们</p><p>因此我们可以选择前2个点组成一条直线<code>L1</code>，然后检查其余点是否也在<code>L1</code>上，不在<code>L1</code>上的点我们记录下来，记为数组q</p><p>这里判断在直线上使用叉积</p><p>若q数组是空的，那么直接输出YES即可</p><p>若q数组非空，因为题目要求最多可以有2条直线，我们再取出q里的前2个点形成第2条直线<code>L2</code>，检查q的其余点是否在<code>L2</code>上，若有一个点不在的话说明这两条直线不满足条件,那么我们换一下两条直线继续重复上述步骤（<code>L1</code>的2个点与q的某个点重新组成2条直线），如果还是不满足则输出NO，有一个满足的话则输出YES</p><p>时间复杂度O(n)</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(x) printf(<span class="meta-string">"***%d\n"</span>,(x))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-8</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    LL x,y;</span><br><span class="line">    point(LL xx=<span class="number">0</span>,LL yy=<span class="number">0</span>)&#123;x=xx;y=yy;&#125;</span><br><span class="line">    point <span class="keyword">operator</span> + (<span class="keyword">const</span> point &amp;b) <span class="keyword">const</span> &#123;<span class="keyword">return</span> point(x+b.x,y+b.y);&#125;</span><br><span class="line">    point <span class="keyword">operator</span> - (<span class="keyword">const</span> point &amp;b) <span class="keyword">const</span> &#123;<span class="keyword">return</span> point(x-b.x,y-b.y);&#125;</span><br><span class="line">    LL <span class="keyword">operator</span> * (<span class="keyword">const</span> point &amp;b)&#123;<span class="keyword">return</span> x*b.x+y*b.y;&#125;</span><br><span class="line">    LL <span class="keyword">operator</span> ^ (<span class="keyword">const</span> point &amp;b)&#123;<span class="keyword">return</span> x*b.y-y*b.x;&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">point p[maxn],q[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(point P1,point P2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(((P2-P1)^(p[i]-P1))!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            res=i;</span><br><span class="line">            q[++cnt]=p[i];</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">        <span class="keyword">if</span>(((q[<span class="number">2</span>]-q[<span class="number">1</span>])^(q[i]-q[<span class="number">1</span>]))!=<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        LL x,y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;x,&amp;y);</span><br><span class="line">        p[i]=point(x,y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=<span class="number">4</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> id=check(p[<span class="number">1</span>],p[<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">if</span>(id==<span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> ok1,ok2;</span><br><span class="line">        ok1=check(p[<span class="number">1</span>],p[id]);</span><br><span class="line">        ok2=check(p[<span class="number">2</span>],p[id]);</span><br><span class="line">        <span class="keyword">if</span>(ok1==<span class="number">-1</span> || ok2==<span class="number">-1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hdu6609-Find the answer(二分+树状数组)</title>
      <link href="/2019/07/29/hdu6609/"/>
      <url>/2019/07/29/hdu6609/</url>
      
        <content type="html"><![CDATA[<blockquote><p>杭电多校第3场G题</p></blockquote><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>Given a sequence of n integers called W and an integer m. For each i (1 &lt;= i &lt;= n), you can choose some elements Wk (1 &lt;= k &lt; i), and change them to zero to make ∑ij=1Wj&lt;=m. So what’s the minimum number of chosen elements to meet the requirements above?.</p></blockquote><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给你一个数组$W$和一个整数$m$，对于每一项$i$，你可以删去$[1,i-1]$中的若干项，使得$\sum_{j=1}^iW[j] \leq m$，对每一项求满足条件的最小删除个数</p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>第一次看到题就想到用优先队列维护出现过的最大值，每次不满足条件时就把队头元素删除，然后比a[i]的小的值再push回优先队列中，然而这样时间复杂度在最坏情况下是$O（n^2logn）$的，显然TLE了</p><p>那么只能优化算法了，既然在线不行，就想到离线做法了。</p><p>每一项用val、id双关键字表示，按val从小到大排序，并O(n)预处理出原来的第i项在排序后是第几项，假设为k。</p><p>对于每一项a[k]，我们需要知道之前出现过的元素的和，并找到刚好满足$\leq m-a[k]$的最右边一个，显然这可以二分查找，找到右端点r后，计算到右端点出现过的元素的个数，此时[1,r]的元素是我们要保留的元素，要删去的元素个数即为 </p><script type="math/tex; mode=display">i-1-\sum_{j=1}^r cnt[j]</script><p>对于出现过的元素和、出现过的元素个数，我们都可以用树状数组维护，降低复杂度</p><p>这样总的复杂度为$O(nlog^2n)$</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>（可以把树状数组的上界改为n而不是maxn，这样可以快一点）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line"><span class="keyword">int</span> T,n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> val,id;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp;a) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> val&lt;a.val;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="keyword">int</span> pos[maxn];</span><br><span class="line">LL sum[maxn],cnt[maxn];</span><br><span class="line"><span class="keyword">int</span> ans[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(LL *t,<span class="keyword">int</span> x,<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x&lt;maxn)</span><br><span class="line">    &#123;</span><br><span class="line">        t[x]+=k;</span><br><span class="line">        x+=lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(LL *t,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)</span><br><span class="line">    &#123;</span><br><span class="line">        res+=t[x];</span><br><span class="line">        x-=lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(sum,<span class="number">0</span>,<span class="keyword">sizeof</span>(sum));</span><br><span class="line">        <span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span>(cnt));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i].val),a[i].id=i;</span><br><span class="line">        sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            pos[a[i].id]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> k=pos[i];</span><br><span class="line">            <span class="keyword">int</span> l,r,mid;</span><br><span class="line">            l=<span class="number">0</span>;r=n;</span><br><span class="line">            <span class="keyword">while</span>(l&lt;r)</span><br><span class="line">            &#123;</span><br><span class="line">                mid=(l+r+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span>(query(sum,mid)&lt;=m-a[k].val)</span><br><span class="line">                    l=mid;</span><br><span class="line">                <span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ans[i]=i<span class="number">-1</span>-query(cnt,l);</span><br><span class="line">            add(sum,k,a[k].val);</span><br><span class="line">            add(cnt,k,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>,ans[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hdu6608-Fansblog(威尔逊定理+素数密度分布)</title>
      <link href="/2019/07/29/hdu6608/"/>
      <url>/2019/07/29/hdu6608/</url>
      
        <content type="html"><![CDATA[<blockquote><p>杭电多校第3场F题</p></blockquote><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>Farmer John keeps a website called ‘FansBlog’ .Everyday , there are many people visited this blog.One day, he find the visits has reached P , which is a prime number.He thinks it is a interesting fact.And he remembers that the visits had reached another prime number.He try to find out the largest prime number Q ( Q &lt; P ) ,and get the answer of Q! Module P.But he is too busy to find out the answer. So he ask you for help. ( Q! is the product of all positive integers less than or equal to n: n! = n <em> (n-1) </em> (n-2) <em> (n-3) </em>… <em> 3 </em> 2 <em> 1 . For example, 4! = 4 </em> 3 <em> 2 </em> 1 = 24 )</p></blockquote><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给你一个素数$P (10^9 \leq P \leq 10^{14})$，让你求$Q!\mod P$</p><p>其中，$Q$是小于$P$且最大的素数</p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>由威尔逊定理可知</p><script type="math/tex; mode=display">(P-1)! \equiv -1 \pmod P</script><p>那么 </p><script type="math/tex; mode=display">Q!(Q+1)(Q+2)......(P-1) \equiv -1 \pmod P</script><script type="math/tex; mode=display">Q! \equiv -1*(Q+1)^{-1}(Q+2)^{-1}......(P-1)^{-1} \pmod P</script><p>或者打表查oeis得</p><script type="math/tex; mode=display">ans = 1/(P-Q-1)! \pmod P</script><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打表程序</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">100</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        LL ans=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=prime[i<span class="number">-1</span>];j++)</span><br><span class="line">            ans=ans*j%prime[i];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"P:%d Q:%d ans:%lld\n"</span>,prime[i],prime[i<span class="number">-1</span>],ans);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>那么只要找到Q，我们就可以求得答案了</p><p>由素数密度分布可知，两个素数的距离大约在logn级别，所以我们可以直接向前暴力枚举Q，再检查Q是不是素数即可<br>检查素数快一点可以用Miller–Rabin素数测试，我是素数筛暴力检查过的</p><p>注意：由于P大于1e9，乘法取模过程可能爆longlong，可以用int128或者用模乘</p><p>程序代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e7</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> prime[maxn+<span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(LL i=<span class="number">2</span>;i&lt;=maxn;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!prime[i]) prime[++prime[<span class="number">0</span>]]=i;</span><br><span class="line">        <span class="keyword">for</span>(LL j=<span class="number">1</span>;j&lt;=prime[<span class="number">0</span>] &amp;&amp; prime[j]&lt;=maxn/i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            prime[i*prime[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(LL x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=prime[<span class="number">0</span>] &amp;&amp; prime[i]&lt;x;i++)</span><br><span class="line">        <span class="keyword">if</span>(x%prime[i]==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">mulmod</span><span class="params">(LL a,LL b,LL c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) res=(res+a)%c;</span><br><span class="line">        a=(a+a)%c;</span><br><span class="line">        b=b&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">qsm</span><span class="params">(LL a,LL b,LL c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) res=mulmod(res,a,c)%c;</span><br><span class="line">        a=mulmod(a,a,c)%c;</span><br><span class="line">        b=b&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line">LL P,Q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    for(int i=2;i&lt;=100;i++)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        LL ans=1;</span></span><br><span class="line"><span class="comment">        for(int j=1;j&lt;=prime[i-1];j++)</span></span><br><span class="line"><span class="comment">            ans=ans*j%prime[i];</span></span><br><span class="line"><span class="comment">        printf("P:%d Q:%d ans:%lld\n",prime[i],prime[i-1],ans);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;P);</span><br><span class="line">        <span class="keyword">for</span>(LL i=P<span class="number">-1</span>;;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(check(i))</span><br><span class="line">            &#123;</span><br><span class="line">                Q=i;</span><br><span class="line">                <span class="comment">//printf("Q=%lld\n",Q);</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//方法一：</span></span><br><span class="line">                LL t=P-Q<span class="number">-1</span>;</span><br><span class="line">                LL ans=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span>(LL k=<span class="number">2</span>;k&lt;=t;k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//printf("%lld %lld\n",k,qsm(k,P-2,P));</span></span><br><span class="line">                    ans=mulmod(ans,qsm(k,P<span class="number">-2</span>,P),P)%P;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                //方法二：</span></span><br><span class="line"><span class="comment">                LL ans=-1;</span></span><br><span class="line"><span class="comment">                for(LL k=Q+1;k&lt;=P-1;k++)</span></span><br><span class="line"><span class="comment">                    ans=mulmod(ans,qsm(k,P-2,P),P);</span></span><br><span class="line"><span class="comment">                printf("%lld\n",(ans+P)%P);</span></span><br><span class="line"><span class="comment">                break;</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019暑期acm训练日记</title>
      <link href="/2019/07/07/acm01/"/>
      <url>/2019/07/07/acm01/</url>
      
        <content type="html"><![CDATA[<p>专题计划：lyd的专题练习题+kuangbin专题</p><p>然而队友让我做数学，我太难了</p><p><img src="https://kimiye.oss-cn-shanghai.aliyuncs.com/img/acm/emoji.jpg" align="center/"></p><a id="more"></a><hr><h2 id="7-7"><a href="#7-7" class="headerlink" title="7.7"></a>7.7</h2><ul><li><p>基本算法</p><p>  0802 占卜DIY （模拟）</p><p>  POJ2083 Fractal （dfs）</p><p>  POJ3714 Raid （水题）</p><p>  0805 防线（秦腾与教学评估） （二分答案）</p><p>  0807 糖果传递 （贪心+中位数性质）</p><p>  POJ1723 Soldiers （构造+中位数性质）</p><p>  POJ1220 Number Base Conversion （任意进制高精度转换）</p><p>  POJ1050 To the Max （dp最大子矩阵和）</p></li></ul><h2 id="7-8"><a href="#7-8" class="headerlink" title="7.8"></a>7.8</h2><ul><li><p>基本数据结构</p><p>  1801 括号画家 （栈+模拟）</p><p>  1802 表达式计算4 （表达式计算+中缀转后缀）</p><p>  1803 City Game （降维+单调栈）</p><p>  POJ1193 内存分配 （链表+堆）</p><p>  1806 Matrix （二维hash）</p><p>  POJ1635 Subway Tree Systems （树的hash/树的最小表示法）</p><p>  1807 Necklace （最小表示法）</p></li></ul><h2 id="7-9"><a href="#7-9" class="headerlink" title="7.9"></a>7.9</h2><ul><li><p>基本数据结构</p><p>  1808 Milking Grid （KMP next数组的性质+hash）</p><p>  1809 匹配统计 （KMP灵活运用）</p><p>  POJ3630 Phone List （字典树）</p><p>  POJ1442 Black Box （对顶堆）</p><p>  1812 生日礼物 （贪心+链表+优先队列）</p><p>  1813 双栈排序 （二分图染色+模拟）</p></li></ul><h2 id="7-11"><a href="#7-11" class="headerlink" title="7.11"></a>7.11</h2><ul><li><p>搜索</p><p>  2901 靶形数独 （dfs+回溯+剪枝）</p><p>  2902 虫食算 （dfs+回溯+剪枝）</p><p>  2903 Mayan游戏 （dfs+剪枝）</p><p>  POJ1167 The Buses （dfs+回溯+剪枝）</p></li></ul><h2 id="7-12"><a href="#7-12" class="headerlink" title="7.12"></a>7.12</h2><ul><li><p>数论</p><p>  Gcd HYSBZ - 2818 （线性筛+欧拉函数+前缀和）</p><p>  Longge’s problem POJ - 2480 （素数筛+因子分解+积性函数+欧拉函数）</p></li></ul><h2 id="7-13"><a href="#7-13" class="headerlink" title="7.13"></a>7.13</h2><ul><li><p>数论</p><p>  青蛙的约会 POJ - 1061 （拓展欧几里得）</p><p>  TYVJ1339 （找不到题）</p><p>  计算器 HYSBZ - 2242 （快速幂+线性同余方程+高次同余方程）</p><p>  Matrix Power Series POJ - 3233 （矩阵快速幂+二分）</p><p>  233 Matrix HDU - 5015 （构造+矩阵快速幂）</p><p>  Widget Factory POJ - 2947 （线性同余方程组+高斯消元）</p></li></ul><h2 id="7-14"><a href="#7-14" class="headerlink" title="7.14"></a>7.14</h2><ul><li><p>数论</p><p>  Xor HYSBZ - 2115 （线性基+异或性质+dfs生成树）</p><p>  新Nim游戏 HYSBZ - 3105 （贪心+线性基）</p><p>  Strange Way to Express Integers POJ - 2891 （中国剩余定理）</p></li><li><p>牛客吉首大学2019年程序设计竞赛（重现赛）</p><p>  E、G、H 3道水题</p></li></ul><h2 id="7-15"><a href="#7-15" class="headerlink" title="7.15"></a>7.15</h2><ul><li><p>数论</p><p>  排列计数 HYSBZ - 4517 （逆元+错排公式）（未提交）</p><p>  Sky Code POJ - 3904 （容斥+二进制）（容斥+莫比乌斯反演）</p><p>  TYVJ1864 （找不到题）</p></li><li><p>搜索</p><p>  Missile Defence System POJ - 3700 （dfs+迭代加深）</p><p>  CODEVS1411 （找不到题）</p><p>  TYVJ1030 （找不到题）</p><p>  CODEVS1099 （找不到题）</p><p>  Weather Forecast POJ - 2044 （bfs/dfs）</p></li></ul><h2 id="7-16"><a href="#7-16" class="headerlink" title="7.16"></a>7.16</h2><ul><li><p>数论</p><p>  换教室 HYSBZ - 4720 （概率dp+最短路）</p></li></ul><h2 id="7-17"><a href="#7-17" class="headerlink" title="7.17"></a>7.17</h2><ul><li><p>数论</p><p>  Dropping tests POJ - 2976 （01分数规划）</p><p>  TYVJ2049 （找不到题）</p><p>  Georgia and Bob POJ - 1704 （阶梯博弈）</p></li><li><p>数据结构进阶</p><p>  CODEVS1069 （找不到题）</p><p>  Rochambeau POJ - 2912 （带权并查集）</p><p>  True Liars POJ - 1417 （带权并查集+背包）</p></li></ul><h2 id="7-18"><a href="#7-18" class="headerlink" title="7.18"></a>7.18</h2><ul><li><p>牛客多校1 (3/10,263/975)</p><p>  A. Equivalent Prefixes</p><p>  F. Random Point in Triangle</p><p>  J. Fraction Comparision</p><p>  补题：</p><p>  B. Integration</p><p>  知识库拓展：</p><p>  1.信号与系统里的的拆项法</p><p>  2.三角形重心3等分/6等分面积，2:1划分中线</p><p>  3.三角形由三点坐标计算面积公式：</p><p>  <code>S=abs(x[1]*(y[2]-y[3])+x[2]*(y[3]-y[1])+x[3]*(y[1]-y[2]))/2;</code></p></li><li><p>数据结构进阶</p><p>  Buy Tickets POJ - 2828 （逆向思维+树状数组+二分）</p></li></ul><h2 id="7-20"><a href="#7-20" class="headerlink" title="7.20"></a>7.20</h2><ul><li><p>牛客多校2 (1/10,365/765)</p><p>  H.Second Large Rectangle</p><p>  补题：</p><p>  F.Partition problem</p></li></ul><h2 id="7-22"><a href="#7-22" class="headerlink" title="7.22"></a>7.22</h2><ul><li><p>杭电多校1</p><p>  D. Vacation</p><p>  补题：</p><p>  B. Operation</p><p>  I. String</p></li><li><p>codeforces div2 (rating:2152,+3,1503)</p></li></ul><h2 id="7-23"><a href="#7-23" class="headerlink" title="7.23"></a>7.23</h2><ul><li><p>2019个人专题赛-第一场 （10/12,11/77）</p><p>  A. Beautiful Paintings</p><p>  B. Holiday Of Equality</p><p>  C. Fafa and his Company</p><p>  D. 宇航员</p><p>  E. Phone Numbers</p><p>  F. DDoS</p><p>  G. New Year and Counting Cards</p><p>  H. Lucky Year</p><p>  I. Diagonal Walking</p><p>  J. Adjacent Replacements</p></li><li><p>codeforces The 2019 University of Jordan Collegiate Programming Contest (组队练习，7/12)</p></li></ul><h2 id="7-24"><a href="#7-24" class="headerlink" title="7.24"></a>7.24</h2><ul><li><p>杭电多校2</p><p>  E. Everything Is Generated In Equal Probability</p><p>  J. Just Skip The Problem</p><p>  补题：</p><p>  K. Keen On Everything But Triangle</p></li><li><p>codeforces div3 (rating:306,+89,1592)</p></li></ul><h2 id="7-25"><a href="#7-25" class="headerlink" title="7.25"></a>7.25</h2><ul><li><p>牛客多校3 (2/10,186/865)</p><p>  B. Crazy Binary String</p><p>  H. Magic Line</p></li></ul><pre><code>补题：D. Big Integer知识库拓展：1.同余乘法运算规律2.BSGS、拓展BSGS</code></pre><h2 id="7-26"><a href="#7-26" class="headerlink" title="7.26"></a>7.26</h2><ul><li><p>2019个人综合赛1 （7/10,2/75）</p><p>  A. Pretty Poem</p><p>  D. The Two Routes</p><p>  F. Sliding Window</p><p>  G. Thematic Contests</p><p>  H. Boredom</p><p>  I. You can Solve a Geometry Problem too</p><p>  J. Divide by three, multiply by two</p><p>  补题：</p><p>  B. Seating of Students</p><p>  C. hannnnah_j’s Biological Test</p></li><li><p>权值线段树、主席树原理学习</p></li></ul><h2 id="7-27"><a href="#7-27" class="headerlink" title="7.27"></a>7.27</h2><ul><li><p>牛客多校4 （5/11,161/828）</p><p>  A. meeting</p><p>  C. sequence</p><p>  D. triples I</p><p>  J. free</p><p>  K. number</p></li><li><p>主席树代码实现</p></li></ul><h2 id="7-28"><a href="#7-28" class="headerlink" title="7.28"></a>7.28</h2><ul><li><p>FFT、NTT原理、代码实现</p><p>  A * B Problem Plus HDU - 1402 （FFT）</p><p>  Rikka with Subset HDU - 5829 （NTT）</p></li></ul><h2 id="7-29"><a href="#7-29" class="headerlink" title="7.29"></a>7.29</h2><ul><li><p>杭电多校3</p><p>  F. Fansblog</p><p>  G. Find the answer</p></li><li><p>FFT、NTT例题</p><p>  洛谷3803 （FFT）</p><p>  3-idiots HDU - 4609 （FFT）</p></li></ul><h2 id="7-30"><a href="#7-30" class="headerlink" title="7.30"></a>7.30</h2><ul><li><p>2019个人综合赛2 (6/10,4/74)</p><p>  A. Nauuo and Chess</p><p>  B. Sky Code</p><p>  D. Cinema</p><p>  E. Writing Code</p><p>  G. Constructing Roads</p><p>  I. The Labyrinth</p></li></ul><h2 id="7-31"><a href="#7-31" class="headerlink" title="7.31"></a>7.31</h2><ul><li><p>杭电多校4</p><p>  A. AND Minimum Spanning Tree</p><p>  G. Just an Old Puzzle</p><p>  补题：</p><p>  J. Minimal Power of Prime</p><p>  C. Divide the Stones</p>  <!-- H. K-th Closest Distance --></li></ul><h2 id="8-1"><a href="#8-1" class="headerlink" title="8.1"></a>8.1</h2><ul><li><p>牛客多校5 （2/10,395/840）</p><p>  A. digits 2</p><p>  G. subsequence 1</p><p>  补题：</p><p>  B. generator 1</p><p>  G. subsequence 1</p>  <!-- I. three points 1 --></li></ul><h2 id="8-2"><a href="#8-2" class="headerlink" title="8.2"></a>8.2</h2><ul><li><p>2019个人综合赛3 (5/10,8/71)</p><p>  D. Pair Of Lines （叉积）</p><p>  F. Mike and Shortcuts （bfs）</p><p>  G. Switches and Lamps （前缀和）</p><p>  H. Space Elevator （dp）</p><p>  J. Hello Kiki （拓展中国剩余定理）</p><p>  补题：</p><p>  A. Destroy Walls （最大生成树）</p><p>  B. Maximum Xor Secondary （单调栈）</p><p>  I. Ghd (随机化算法)</p></li></ul><h2 id="8-3"><a href="#8-3" class="headerlink" title="8.3"></a>8.3</h2><ul><li><p>牛客多校6 （3/10,262/829）</p><p>  A. Garbage Classification</p><p>  B. Shorten IPv6 Address （模拟）</p><p>  J. Upgrading Technology</p><p>  补题：</p><p>  D. Move （二分|暴力）</p>  <!-- G. Is Today Friday?--><p>  知识库拓展：</p><p>  1.%x %X %04x %04X</p><p>  2.atoi()    <code>x=atoi(str);</code></p><p>  3.itoa()    <code>itoa(x,str,base);</code></p><p>  4.蔡勒公式</p><p>  c:世纪  （已过世纪，当前世纪-1，y/100）</p><p>  y:年    （公元后取后两位数，y%100，y-100*c）</p><p>  m:月    （1、2月份看作13、14，进位的话年份减1，m&lt;=2?m+12,y—:m）</p><p>  d:日</p><p>  1582年10月4日之后</p>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">week = (( y + y/<span class="number">4</span> + c/<span class="number">4</span> - <span class="number">2</span>*c + <span class="number">13</span>*(m+<span class="number">1</span>)/<span class="number">5</span> + d - <span class="number">1</span> ) % <span class="number">7</span> + <span class="number">7</span> ) % <span class="number">7</span>;</span><br></pre></td></tr></table></figure><p>  1582年10月4日或之前</p>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">week = (( y + y/<span class="number">4</span> + c/<span class="number">4</span> - <span class="number">2</span>*c + <span class="number">13</span>*(m+<span class="number">1</span>)/<span class="number">5</span> + d + <span class="number">2</span> ) % <span class="number">7</span> + <span class="number">7</span> ) % <span class="number">7</span>;</span><br></pre></td></tr></table></figure></li></ul><h2 id="8-5"><a href="#8-5" class="headerlink" title="8.5"></a>8.5</h2><ul><li><p>杭电多校5</p><p>  E. permutation 1 （分类枚举）</p><p>  F. string matching （扩展KMP）</p><p>  G. permutation 2 （打表找规律）</p><p>  补题：</p><p>  D. equation （分类+前缀和）（还在蜜汁wa中）</p></li></ul><h2 id="8-6"><a href="#8-6" class="headerlink" title="8.6"></a>8.6</h2><ul><li><p>2019个人综合赛4 (3/10,7/67)</p><p>  D. Elections （贪心+暴力枚举）</p><p>  I. Reachability from the Capital （技巧dfs）</p><p>  J. John （Nim博弈）</p><p>  补题：</p><p>  B. Time to Raid Cowavans （分块）</p><p>  C. XOR and Favorite Number （莫队）</p><p>  G. Rotating Scoreboard （半平面交求多边形核）</p><p>  F. “Ray, Pass me the dishes!” （线段树）</p></li></ul><h2 id="8-7"><a href="#8-7" class="headerlink" title="8.7"></a>8.7</h2><ul><li><p>杭电多校6</p><p>  E. Snowy Smile （最大子矩阵和+线段树）</p><p>  H. TDL （构造+枚举）</p><p>  L. Stay Real （贪心）</p><p>  补题：</p><p>  B. Nonsense Time (逆向+最长上升子序列)</p><p>  注意点：</p><p>  1.最长上升子序列求得的dp[]并不是最终的LIS序列，需用一个pre记录每个值的前一个值，最后用最末尾的值回溯</p></li></ul><h2 id="8-8"><a href="#8-8" class="headerlink" title="8.8"></a>8.8</h2><ul><li><p>牛客多校7 （5/11,215/855）</p><p>  A. String （最小表示法）</p><p>  B. Irreducible Polynomial （多项式实数域约分）</p><p>  C. Governing sand （权值线段树）</p><p>  D. Number （水题，构造）</p><p>  J. A+B problem （水题）</p></li></ul><h2 id="8-9"><a href="#8-9" class="headerlink" title="8.9"></a>8.9</h2><ul><li><p>2019个人综合赛5 (5/10,5/65)</p><p>  B. Jamie and Binary Sequence (changed after round) （贪心+模拟）</p><p>  C. Desert King （01分数规划+最小生成树）</p><p>  E. Zuma （区间DP）</p><p>  G. How Many Pieces of Land ? （平面图欧拉定理+高精度）</p><p>  I. Selecting Courses （二分图匹配+匈牙利算法）</p></li></ul><h2 id="8-10"><a href="#8-10" class="headerlink" title="8.10"></a>8.10</h2><ul><li><p>牛客多校8 （4/10,178/796）</p><p>  A. All-one Matrices （悬线法）（单调栈+前缀和）</p><p>  B. Beauty Values （线性贡献+取补集）</p><p>  C. CDMA （构造+递归）</p><p>  G. Gemstones （栈）</p></li></ul><h2 id="8-12"><a href="#8-12" class="headerlink" title="8.12"></a>8.12</h2><ul><li><p>杭电多校7</p><p>  K. Kejin Player （期望）</p>  <!-- A. A + B = C -->  <!-- F. Final Exam --></li></ul><h2 id="8-13"><a href="#8-13" class="headerlink" title="8.13"></a>8.13</h2><ul><li>南京多校1</li></ul><h2 id="8-14"><a href="#8-14" class="headerlink" title="8.14"></a>8.14</h2><ul><li><p>杭电多校8</p><p>  I. Calabash and Landlord </p><p>  J. Quailty and CCPC</p></li></ul><h2 id="8-15"><a href="#8-15" class="headerlink" title="8.15"></a>8.15</h2><ul><li><p>牛客多校9 （3/10,217/711）</p><p>  B. Quadratic equation （解二次同余方程+二次剩余）</p><p>  D. Knapsack Cryptosystem （折半搜索）</p><p>  E. All men are brothers （容斥+并查集+树状数组）</p><p>  补题：</p>  <!-- A. The power of Fibonacci （斐波那契系数） --></li></ul><h2 id="8-16"><a href="#8-16" class="headerlink" title="8.16"></a>8.16</h2><ul><li><p>南京多校2</p><p>  C. Sdl and Network Flows （单调栈）</p><p>  E. SDL’s Number （数学）</p><p>  F. Game （博弈）</p><p>  I. Sdl and Math Problem （二分）</p><p>  J. Sdl and McDonald’s （dp+线段树）</p></li></ul><h2 id="8-17"><a href="#8-17" class="headerlink" title="8.17"></a>8.17</h2><ul><li><p>牛客多校10 （4/10,180/744）</p><p>  B. Coffee Chicken （分治+递归）</p><p>  D. Han Xin and His Troops （中国剩余定理+大数）</p><p>  E. Hilbert Sort (递归+坐标变换)</p><p>  H. Stammering Chemists （水题）</p><p>  补题：</p><p>  F. Popping Balloons</p></li></ul><h2 id="8-19"><a href="#8-19" class="headerlink" title="8.19"></a>8.19</h2><ul><li><p>杭电多校9</p><p>  B. Rikka with Cake （树状数组+闭平面分割）</p><p>  E. Rikka with Game （博弈）</p><p>  F. Rikka with Coin （枚举）</p><p>  补题：</p>  <!-- A. Rikka with Quicksort --></li></ul><h2 id="8-20"><a href="#8-20" class="headerlink" title="8.20"></a>8.20</h2><ul><li><p>摸鱼</p><p>  数论学习</p><p>  python入门</p><p>  QT开发</p></li></ul><h2 id="8-21"><a href="#8-21" class="headerlink" title="8.21"></a>8.21</h2><ul><li><p>杭电多校10</p><p>  C. Valentine’s Day （贪心）</p><p>  E. Welcome Party</p><p>  I. Block Breaker （dfs）</p></li><li><p>FWT学习</p></li></ul><h2 id="8-22"><a href="#8-22" class="headerlink" title="8.22"></a>8.22</h2><ul><li>摸鱼</li></ul><h2 id="8-23"><a href="#8-23" class="headerlink" title="8.23"></a>8.23</h2><ul><li><p>CCPC网络赛 (5,11,2/21)</p><p>  A. \^&amp;\^ （构造）</p><p>  C. K-th occurrence （后缀数组+主席树）</p><p>  F. Shuffle Card （逆向）</p><p>  G. Windows Of CCPC （递归）</p><p>  H. Fishing Master （贪心）</p></li></ul><h2 id="8-24"><a href="#8-24" class="headerlink" title="8.24"></a>8.24</h2><ul><li>开学了，结束</li></ul>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学校向---Android大作业（连连看口袋妖怪版）</title>
      <link href="/2019/06/21/android01/"/>
      <url>/2019/06/21/android01/</url>
      
        <content type="html"><![CDATA[<blockquote><p>基础原型：<br><a href="https://blog.csdn.net/ouyang_peng/article/details/14115627" target="_blank" rel="noopener">https://blog.csdn.net/ouyang_peng/article/details/14115627</a></p><p>修改：</p><ul><li>可以选择游戏难度：简单、普通、困难（其实就是图片变多了）</li><li>每个难度总共有5关：初始100秒，每关递减15秒</li><li>增加排行榜功能，游戏有得分设定</li><li>可以设置bgm、提示音、震动开关</li><li>同一张图片触碰2次取消选中</li><li>修复左边界2张图片无法相连的bug</li><li>然后其他的就是怕老师查重就把素材什么的换掉啦23333</li></ul></blockquote><p><a href="https://github.com/Kehuaiiiiii/LianLiankan" target="_blank" rel="noopener">代码和app详见github</a></p><a id="more"></a><p>小小遗憾：</p><p>图片位置的设置框架让我有点蛋疼。。。</p><p>虽说图片可以根据屏幕大小自动调整大小</p><p>但是整体不是居中的</p><p>理想是将图片放到一个容器中，容器可以在屏幕居中，这样整体就能居中了。。。期末由于时间赶就没改。。。先立个flag</p>]]></content>
      
      
      <categories>
          
          <category> Andriod </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Andriod </tag>
            
            <tag> java </tag>
            
            <tag> 学校 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学校向---Java大作业（文本编辑器NotePad）</title>
      <link href="/2019/06/21/java01/"/>
      <url>/2019/06/21/java01/</url>
      
        <content type="html"><![CDATA[<blockquote><p>原型类似windows的记事本</p><ul><li>可以创建，编辑和保存文本格式的文件； </li><li>在文本编辑时实现复制/粘贴功能；</li><li>在文本中搜索/替换字符（字符串）；</li><li>编辑Java源程序时语法关键字加亮；</li><li>可打开二进制格式的文件，对其进行二进制形式的编辑并将编辑结果保存回文件中；</li><li>在文本中以字符串形式插入当前的日期/时间。</li></ul></blockquote><p><a href="https://github.com/Kehuaiiiiii/NotePad" target="_blank" rel="noopener">代码详见github</a></p><a id="more"></a><p>除了语法高亮，其他功能大致能写个七七八八</p><p>向IDE开发迈进了一步？？？</p><p>一学期没听java课</p><p>期末面向搜索引擎编程</p><p>东拼拼西凑凑搞出这么一个东西（dalao莫喷）</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 学校 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uva1376-Animal Run(最小割+对偶图+最短路)</title>
      <link href="/2019/06/04/uva1376/"/>
      <url>/2019/06/04/uva1376/</url>
      
        <content type="html"><![CDATA[<blockquote><p>我图论好菜啊</p></blockquote><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>动物园动物要逃跑了，在每个路口有3条路可以走（横、竖、斜），现在给出每条路上警察需要派w个人就能堵住这条路，问最少需要派出多少人可以防止动物走到终点？</p><p>起点：左上角</p><p>终点：右下角</p><p><img src="https://kimiye.oss-cn-shanghai.aliyuncs.com/img/acm/uva1376-1.jpg" width="70%" heigth="70%" align="center"><br><a id="more"></a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>显然从图的左下部分画一条穿过若干边的线到右上部分，图就被分成了2部分，把穿过的边的权值之和加起来就是候选答案，那么这就是一道最小割问题，但由于边数过多不能跑一个最大流，然而这是一个对偶图，可以将最大流转化为最短路求解，使用dijkstra优先队列优化的方法就能快速求解了。。。</p><p><img src="https://kimiye.oss-cn-shanghai.aliyuncs.com/img/acm/uva1376-2.jpg" width="80%" heigth="80%" align="center"></p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e6</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">qnode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> v;</span><br><span class="line"><span class="keyword">int</span> c;</span><br><span class="line">qnode(<span class="keyword">int</span> _v=<span class="number">0</span>,<span class="keyword">int</span> _c=<span class="number">0</span>):v(_v),c(_c)&#123;&#125;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt;(<span class="keyword">const</span> qnode &amp;r)<span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> c&gt;r.c;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> v,cost;</span><br><span class="line">Edge(<span class="keyword">int</span> _v=<span class="number">0</span>,<span class="keyword">int</span> _cost=<span class="number">0</span>):v(_v),cost(_cost)&#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> n,m,kase;</span><br><span class="line"><span class="built_in">vector</span>&lt;Edge&gt; E[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="keyword">int</span> dist[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> start)</span><span class="comment">//点的编号从1开始</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) dist[i]=inf;</span><br><span class="line">priority_queue&lt;qnode&gt;que;</span><br><span class="line"><span class="keyword">while</span>(!que.empty()) que.pop();</span><br><span class="line">dist[start]=<span class="number">0</span>;</span><br><span class="line">que.push(qnode(start,<span class="number">0</span>));</span><br><span class="line">qnode tmp;</span><br><span class="line"><span class="keyword">while</span>(!que.empty())</span><br><span class="line">&#123;</span><br><span class="line">tmp=que.top();</span><br><span class="line">que.pop();</span><br><span class="line"><span class="keyword">int</span> u=tmp.v;</span><br><span class="line"><span class="keyword">if</span>(vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">vis[u]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;E[u].size();i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v=E[u][i].v;</span><br><span class="line"><span class="keyword">int</span> cost=E[u][i].cost;</span><br><span class="line"><span class="keyword">if</span>(!vis[v]&amp;&amp;dist[v]&gt;dist[u]+cost)</span><br><span class="line">&#123;</span><br><span class="line">dist[v]=dist[u]+cost;</span><br><span class="line">que.push(qnode(v,dist[v]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">E[u].push_back(Edge(v,w));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m)!=EOF &amp;&amp; n+m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> s=<span class="number">2</span>*(n<span class="number">-1</span>)*(m<span class="number">-1</span>)+<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> t=<span class="number">2</span>*(n<span class="number">-1</span>)*(m<span class="number">-1</span>)+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> u,v,w;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=s;i++)</span><br><span class="line">            E[i].clear();</span><br><span class="line">        <span class="comment">// 横线</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m<span class="number">-1</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w);</span><br><span class="line">                <span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    u=<span class="number">2</span>*j;</span><br><span class="line">                    addedge(t,u,w);</span><br><span class="line">                    addedge(u,t,w);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(i==n)</span><br><span class="line">                &#123;</span><br><span class="line">                    u=<span class="number">2</span>*(n<span class="number">-2</span>)*(m<span class="number">-1</span>)+<span class="number">2</span>*(j<span class="number">-1</span>)+<span class="number">1</span>;</span><br><span class="line">                    addedge(s,u,w);</span><br><span class="line">                    addedge(u,s,w);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// 跟下边的格子</span></span><br><span class="line">                    u=<span class="number">2</span>*(i<span class="number">-2</span>)*(m<span class="number">-1</span>)+<span class="number">2</span>*(j<span class="number">-1</span>)+<span class="number">1</span>;</span><br><span class="line">                    v=u+<span class="number">2</span>*(m<span class="number">-1</span>)+<span class="number">1</span>;</span><br><span class="line">                    addedge(u,v,w);</span><br><span class="line">                    addedge(v,u,w);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="comment">// 竖线</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w);</span><br><span class="line">                <span class="keyword">if</span>(j==<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    u=<span class="number">2</span>*(i<span class="number">-1</span>)*(m<span class="number">-1</span>)+<span class="number">1</span>;</span><br><span class="line">                    addedge(s,u,w);</span><br><span class="line">                    addedge(u,s,w);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(j==m)</span><br><span class="line">                &#123;</span><br><span class="line">                    u=<span class="number">2</span>*i*(m<span class="number">-1</span>);</span><br><span class="line">                    addedge(t,u,w);</span><br><span class="line">                    addedge(u,t,w);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// 跟右边的格子</span></span><br><span class="line">                    u=<span class="number">2</span>*(i<span class="number">-1</span>)*(m<span class="number">-1</span>)+<span class="number">2</span>*(j<span class="number">-1</span>);</span><br><span class="line">                    v=u+<span class="number">1</span>;</span><br><span class="line">                    addedge(u,v,w);</span><br><span class="line">                    addedge(v,u,w);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="comment">// 斜线</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m<span class="number">-1</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 跟上面的格子</span></span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w);</span><br><span class="line">                u=<span class="number">2</span>*(i<span class="number">-1</span>)*(m<span class="number">-1</span>)+<span class="number">2</span>*j<span class="number">-1</span>;</span><br><span class="line">                v=u+<span class="number">1</span>;</span><br><span class="line">                addedge(u,v,w);</span><br><span class="line">                addedge(v,u,w);</span><br><span class="line">            &#125;</span><br><span class="line">        Dijkstra(s,s);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: Minimum = %d\n"</span>,++kase,dist[t]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uva1395-Slim Span(最小生成树应用)</title>
      <link href="/2019/06/04/uva1395/"/>
      <url>/2019/06/04/uva1395/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>给你一个无向图，问这个图的生成树当中，T值最小是多少？</p><p>T：生成树当中，权值最大的边-权值最小的边</p></blockquote><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>显然这题要跟最小生成树有关系</p><p>考虑最小生成树的Kruskal算法：</p><p><code>找到权值最小的不形成回路的n-1条边，权值累加即可</code></p><p>显然T值是<code>第n-1条边-第1条边</code></p><p>然后对于这题不难想到这么一个结论</p><p><code>选定一条权值最小的边作为最小生成树的一部分，其T值最小的生成树就是以该边为起点（最小值）的最小生成树</code></p><p>那么只要枚举起点，从中找到T值最小的生成树即可</p><p>起点范围是1~m-n+2（需保证至少有m-1条边）</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> u,v,w;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> edge &amp;a) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> w&lt;a.w;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;e[<span class="number">10007</span>];</span><br><span class="line"><span class="keyword">int</span> n,m,fa[<span class="number">10007</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getfa</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x==fa[x]) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> fa[x]=getfa(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m)!=EOF &amp;&amp; n+m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;e[i].u,&amp;e[i].v,&amp;e[i].w);</span><br><span class="line">        sort(e+<span class="number">1</span>,e+<span class="number">1</span>+m);</span><br><span class="line">        <span class="keyword">int</span> ans=inf;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m-n+<span class="number">2</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) fa[j]=j;</span><br><span class="line">            <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=m;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> fx=getfa(e[j].u);</span><br><span class="line">                <span class="keyword">int</span> fy=getfa(e[j].v);</span><br><span class="line">                <span class="keyword">if</span>(fx!=fy)</span><br><span class="line">                &#123;</span><br><span class="line">                    fa[fx]=fy;</span><br><span class="line">                    cnt++;</span><br><span class="line">                    <span class="keyword">if</span>(cnt==n<span class="number">-1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        ans=min(ans,e[j].w-e[i].w);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans==inf)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端学习-备忘录项目实战</title>
      <link href="/2019/06/03/web02/"/>
      <url>/2019/06/03/web02/</url>
      
        <content type="html"><![CDATA[<blockquote><p>期末考试快到了，需要一个复习计划表了，结合最近所学，就搞了这么一个 html+css+js 的一份小作品<br>添加了缓存功能：刷新/关闭计划表也不会消失啦~</p></blockquote><p>传送门：<a href="../../../../projects/MemoWeb/index.min.html">Memo Web</a></p><a id="more"></a><p>2019.7.7更新（界面出错按shift+F5刷新）</p><ul><li>增加上下移动按钮（期末复习时发现无法体现ToDoList的优先级，故增加）</li><li>修复默认有一个空白项的bug</li></ul><p>html代码很简单</p><p>1个<code>table</code></p><p>1个<code>div</code></p><div><div class="fold_hider"><div class="close hider_title">点击显/隐</div></div><div class="fold"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>备忘录 - Memo Web<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/reset.css"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/page-index.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"memoTable"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>索引<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>&amp;nbsp;<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">&lt;!-- &lt;tr&gt;</span></span><br><span class="line"><span class="comment">                &lt;td&gt;1&lt;/td&gt;</span></span><br><span class="line"><span class="comment">                &lt;td&gt;高数&lt;/td&gt;</span></span><br><span class="line"><span class="comment">                &lt;td&gt;&lt;a href="javascript:;"&gt;Delete&lt;/a&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="comment">            &lt;/tr&gt;</span></span><br><span class="line"><span class="comment">            &lt;tr&gt;</span></span><br><span class="line"><span class="comment">                &lt;td&gt;2&lt;/td&gt;</span></span><br><span class="line"><span class="comment">                &lt;td&gt;大物&lt;/td&gt;</span></span><br><span class="line"><span class="comment">                &lt;td&gt;&lt;a href="javascript:;"&gt;Delete&lt;/a&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="comment">            &lt;/tr&gt;</span></span><br><span class="line"><span class="comment">            &lt;tr&gt;</span></span><br><span class="line"><span class="comment">                &lt;td&gt;3&lt;/td&gt;</span></span><br><span class="line"><span class="comment">                &lt;td&gt;模电&lt;/td&gt;</span></span><br><span class="line"><span class="comment">                &lt;td&gt;&lt;a href="javascript:;"&gt;Delete&lt;/a&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="comment">            &lt;/tr&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"addDiv"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>添加新记录<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>内容:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"inputText"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"addButton"</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/function.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><p>css代码也不复杂</p><p>主要就是对边框、间距的处理</p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 表格样式 */</span></span><br><span class="line"><span class="selector-tag">table</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#e9e9e9</span>;</span><br><span class="line"><span class="comment">/* 居中 */</span></span><br><span class="line"><span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line"><span class="comment">/* 边框 */</span></span><br><span class="line"><span class="attribute">border-top</span>: <span class="number">1px</span> solid black;</span><br><span class="line"><span class="attribute">border-right</span>: <span class="number">1px</span> solid black;</span><br><span class="line"><span class="comment">/* 文字居中 */</span></span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">th</span>&#123;</span><br><span class="line"><span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">th</span>,<span class="selector-tag">td</span>&#123;</span><br><span class="line"><span class="comment">/* 边框 */</span></span><br><span class="line"><span class="attribute">border-bottom</span>: <span class="number">1px</span> solid black;</span><br><span class="line"><span class="attribute">border-left</span>: <span class="number">1px</span> solid black;</span><br><span class="line"><span class="comment">/* 间距 */</span></span><br><span class="line"><span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 超链接样式 */</span></span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line"><span class="attribute">color</span>: blue;</span><br><span class="line"><span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* div样式 */</span></span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#e9e9e9</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="comment">/* 居中 */</span></span><br><span class="line"><span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line"><span class="comment">/* 边框 */</span></span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">span</span>&#123;</span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line"><span class="attribute">margin-right</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">input</span>&#123;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">5px</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">225px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">button</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">5px</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><p>js代码</p><p>函数已经封装好了</p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更新</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> allTr = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"tr"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>; i&lt;allTr.length; i++)</span><br><span class="line">allTr[i].children[<span class="number">0</span>].innerHTML = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除记录</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">del</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> tr = <span class="keyword">this</span>.parentNode.parentNode;</span><br><span class="line"><span class="keyword">var</span> index = tr.children[<span class="number">0</span>].innerHTML;</span><br><span class="line"><span class="keyword">if</span>(confirm(<span class="string">"确定删除索引为"</span>+index+<span class="string">"的记录吗?"</span>))</span><br><span class="line">&#123;</span><br><span class="line">tr.parentNode.removeChild(tr);</span><br><span class="line">update();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 增加记录</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> input = <span class="built_in">document</span>.getElementById(<span class="string">"inputText"</span>);</span><br><span class="line"><span class="keyword">var</span> table = <span class="built_in">document</span>.getElementById(<span class="string">"memoTable"</span>);</span><br><span class="line"><span class="keyword">var</span> tr = <span class="built_in">document</span>.createElement(<span class="string">"tr"</span>);</span><br><span class="line"><span class="keyword">if</span>(input.value == <span class="string">""</span>)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">tr.innerHTML = <span class="string">"&lt;td&gt;"</span> + table.children.length + <span class="string">"&lt;/td&gt;&lt;td&gt;"</span> + input.value + <span class="string">"&lt;/td&gt;&lt;td&gt;&lt;a href=\"javascript:;\"&gt;Delete&lt;/a&gt;&lt;/td&gt;"</span>;</span><br><span class="line">tr.getElementsByTagName(<span class="string">"a"</span>)[<span class="number">0</span>].onclick = del;</span><br><span class="line">table.appendChild(tr);</span><br><span class="line">input.value = <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按键响应事件</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onKeyPress</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line"><span class="keyword">var</span> keyCode = <span class="literal">null</span>;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(event.which)  </span><br><span class="line">keyCode = event.which;  </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(event.keyCode)   </span><br><span class="line">keyCode = event.keyCode;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(keyCode == <span class="number">13</span>)   </span><br><span class="line">&#123;  </span><br><span class="line">add();</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定点击响应事件</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">band</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">"addButton"</span>);</span><br><span class="line">btn.onclick = add;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> input = <span class="built_in">document</span>.getElementById(<span class="string">"inputText"</span>);</span><br><span class="line">input.onkeypress = onKeyPress;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.onbeforeunload = write;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取本地缓存</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> str = localStorage.getItem(<span class="string">"CONTENT"</span>);</span><br><span class="line"><span class="keyword">var</span> content = str.split(<span class="string">"|$|"</span>);</span><br><span class="line"><span class="comment">// console.log(str);</span></span><br><span class="line"><span class="comment">// console.log(content);</span></span><br><span class="line"><span class="keyword">var</span> table = <span class="built_in">document</span>.getElementById(<span class="string">"memoTable"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;content.length; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> tr = <span class="built_in">document</span>.createElement(<span class="string">"tr"</span>);</span><br><span class="line">tr.innerHTML = <span class="string">"&lt;td&gt;"</span> + table.children.length + <span class="string">"&lt;/td&gt;&lt;td&gt;"</span> + content[i] + <span class="string">"&lt;/td&gt;&lt;td&gt;&lt;a href=\"javascript:;\"&gt;Delete&lt;/a&gt;&lt;/td&gt;"</span>;</span><br><span class="line">tr.getElementsByTagName(<span class="string">"a"</span>)[<span class="number">0</span>].onclick = del;</span><br><span class="line">table.appendChild(tr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 写入本地缓存</span></span><br><span class="line"><span class="comment">// 只能写入一个对象 所以要把所有内容封装在一个字符串中</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> allTr = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"tr"</span>);</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>; i&lt;allTr.length<span class="number">-1</span>; i++)</span><br><span class="line">str += allTr[i].children[<span class="number">1</span>].innerHTML + <span class="string">"|$|"</span>;</span><br><span class="line">str += allTr[allTr.length<span class="number">-1</span>].children[<span class="number">1</span>].innerHTML</span><br><span class="line">localStorage.setItem(<span class="string">"CONTENT"</span>,str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ------------------------------------------</span></span><br><span class="line">band();</span><br><span class="line">read();</span><br></pre></td></tr></table></figure></div></div><p>js笔记：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">获取父元素：</span><br><span class="line">obj.parentNode</span><br><span class="line"></span><br><span class="line">增加子元素方法(重点在于创建子元素)：</span><br><span class="line">father.appendChild(son);</span><br><span class="line"></span><br><span class="line">删除子元素方法：</span><br><span class="line">father.removeChild(son); <span class="xml"><span class="tag">&lt;<span class="name">-</span>&gt;</span> son.parentNode.removeChild(son);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">DOM Event</span></span><br><span class="line"><span class="xml">onclick --- 鼠标点击</span></span><br><span class="line"><span class="xml">onkeypress --- 键盘按下</span></span><br><span class="line"><span class="xml">onbeforeunload --- 刷新/关闭网页</span></span><br><span class="line"></span><br><span class="line"><span class="xml">读取本地缓存：</span></span><br><span class="line"><span class="xml">localStorage.getItem(key_name);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">写入本地缓存：</span></span><br><span class="line"><span class="xml">localStorage.setItem(key_name,value);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">字符串分割：</span></span><br><span class="line"><span class="xml">str.split(字符串/正则表达式);</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端学习-POLO360项目实战</title>
      <link href="/2019/05/31/web01/"/>
      <url>/2019/05/31/web01/</url>
      
        <content type="html"><![CDATA[<blockquote><p>学习完前端，拿一个经典的网站设计模板作为练习对象，巩固一下html+css代码基础，顺带搞了一波ps</p></blockquote><p>效果展示：<br><a href="../../../../projects/POLO360/index.html">点击查看</a></p><a id="more"></a><p>index.html代码：</p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏</div></div><div class="fold"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>POLO360<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引入reset.css清除默认样式 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"css/reset.css"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引入page-index.css --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"css/page-index.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header w"</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>HOME<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Back to home<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>PRODUCTS<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>What we have for you<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>SERVICES<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Things we do<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>BLOG<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Follow our updates<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>CONTACT<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Ways to reach us<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/logo.png"</span> <span class="attr">alt</span>=<span class="string">"logo"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"banner w"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/banner/banner01.png"</span> <span class="attr">alt</span>=<span class="string">"banner01"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pointerDiv"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"active"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content w clearfix"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pl"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Perfect Logic<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>All you want your website to do.<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"imgDiv"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/picture/pic01.png"</span> <span class="attr">alt</span>=<span class="string">"pic01"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Learn More<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cs"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Complete Solution<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>A tool anything and everything you can think<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"imgDiv"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/picture/pic02.png"</span> <span class="attr">alt</span>=<span class="string">"pic02"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciun tdolore magnam aliquam quaerat voluptatem.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Learn More<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"uc"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Uber Culture<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Fresh. Modern and ready for future<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"imgDiv"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/picture/pic03.png"</span> <span class="attr">alt</span>=<span class="string">"pic03"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Learn More<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"contact w clearfix"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sc"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Social Connection<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"icon"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/rss.png"</span> <span class="attr">alt</span>=<span class="string">"rss"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/fb.png"</span> <span class="attr">alt</span>=<span class="string">"fb"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/in.png"</span> <span class="attr">alt</span>=<span class="string">"in"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/yt.png"</span> <span class="attr">alt</span>=<span class="string">"yt"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/tw.png"</span> <span class="attr">alt</span>=<span class="string">"tw"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"nl"</span>&gt;</span>Newsletter<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"txt"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"your email address"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span>Send it<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"co"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Contact<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"txt"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"your name"</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"txt"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"your email address"</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">"tarea"</span> <span class="attr">placeholder</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span>Send it<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nu"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>News Updates<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/1.gif"</span> /&gt;</span></span><br><span class="line">                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/2.gif"</span> /&gt;</span></span><br><span class="line">                    Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam.</span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"p2"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/3.gif"</span> /&gt;</span></span><br><span class="line">                    At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium.</span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span>Visit our Blog<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"w"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"cp"</span>&gt;</span>Copyright 2010. Studio VIVROCKS. All Rights Reserved.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>Site Powered by Wordpress. Design and Developed by VIVROCKS<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span> | <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>About<span class="tag">&lt;/<span class="name">a</span>&gt;</span> | <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Products<span class="tag">&lt;/<span class="name">a</span>&gt;</span> | <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Services<span class="tag">&lt;/<span class="name">a</span>&gt;</span> | <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Contact<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Privacy Policy<span class="tag">&lt;/<span class="name">a</span>&gt;</span> | <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Terms of use<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                </span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><hr><p>page-index.css代码</p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏</div></div><div class="fold"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="comment">/* 设置背景图片 */</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../image/body-bg.png) repeat-x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 解决高度塌陷 */</span></span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>,</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 固定宽度并居中 */</span></span><br><span class="line"><span class="selector-class">.w</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">940px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* header样式 */</span></span><br><span class="line"><span class="selector-class">.header</span>&#123;</span><br><span class="line">    <span class="comment">/* 设置上内边距 */</span></span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">37px</span>;</span><br><span class="line">    <span class="comment">/* 设置下内边距 */</span></span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">46px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* logo样式 */</span></span><br><span class="line"><span class="selector-class">.logo</span>&#123;</span><br><span class="line">    <span class="comment">/* 设置左外边距 */</span></span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 导航条样式 */</span></span><br><span class="line"><span class="selector-class">.nav</span>&#123;</span><br><span class="line">    <span class="comment">/* 向右浮动 */</span></span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="comment">/* 设置上外边距 */</span></span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">22px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 导航条列表样式 */</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="comment">/* 向左浮动 */</span></span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="comment">/* 设置左、右内边距 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">10px</span> <span class="number">8px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="comment">/* 设置左边框 */</span></span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">1px</span> <span class="number">#d6d6d6</span> dotted;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 导航条超链接样式 */</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="comment">/* 设置字体样式 */</span></span><br><span class="line">    <span class="attribute">font</span>: bold <span class="number">14px</span> Georgia; <span class="comment">/* 粗细 大小 字体 */</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666666</span>;</span><br><span class="line">    <span class="comment">/* 去除下划线 */</span></span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置导航条超链接伪类 */</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#a1a1a1</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 导航条p标签样式 */</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="comment">/* 设置字体样式 */</span></span><br><span class="line">    <span class="attribute">font</span>: <span class="number">11px</span> Tahoma;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#b7b7b7</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置banner样式 */</span></span><br><span class="line"><span class="selector-class">.banner</span>&#123;</span><br><span class="line">    <span class="comment">/* 设置高度（不设置的话高度被img撑开 阴影无法显示） */</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">355px</span>;</span><br><span class="line">    <span class="comment">/* 设置背景图片 */</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../image/banner-bg.png) no-repeat;</span><br><span class="line">    <span class="comment">/* 背景图片位置 */</span></span><br><span class="line">    <span class="attribute">background-position</span>: bottom center;</span><br><span class="line">    <span class="comment">/* 父元素开启相对定位 */</span></span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置pointerDiv样式 */</span></span><br><span class="line"><span class="selector-class">.pointerDiv</span>&#123;</span><br><span class="line">    <span class="comment">/* 开启绝对定位 */</span></span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="comment">/* 绝对定位位置 */</span></span><br><span class="line">    <span class="attribute">top</span>: <span class="number">313px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置banner按钮 */</span></span><br><span class="line"><span class="selector-class">.pointerDiv</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="comment">/* 向左浮动并把a变成块元素（下面设置宽高） */</span></span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="comment">/* 设置宽高 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="comment">/* 设置背景图片 */</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../image/pointer.png) no-repeat;</span><br><span class="line">    <span class="comment">/* 设置左外边距 */</span></span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置banner-active按钮和伪类 */</span></span><br><span class="line"><span class="selector-class">.pointerDiv</span> <span class="selector-class">.active</span>,</span><br><span class="line"><span class="selector-class">.pointerDiv</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../image/pointer-active.png) no-repeat;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置content样式 */</span></span><br><span class="line"><span class="selector-class">.content</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置content中的h1 */</span></span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-tag">h1</span>&#123;</span><br><span class="line">    <span class="comment">/* 设置字体样式 */</span></span><br><span class="line">    <span class="attribute">font</span>: bold <span class="number">24px</span> Georgia;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000000</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="comment">/* 设置上内边距 */</span></span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="comment">/* 设置背景图片 */</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../image/line.png) no-repeat;</span><br><span class="line">    <span class="attribute">background-position</span>: bottom center;</span><br><span class="line">    <span class="comment">/* 设置下内边距（移动line） */</span></span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="comment">/* 设置下外边距 */</span></span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">38px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置content中的div */</span></span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.pl</span>, <span class="selector-class">.content</span> <span class="selector-class">.cs</span>, <span class="selector-class">.content</span> <span class="selector-class">.uc</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置content中的cs样式 */</span></span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.cs</span>&#123;</span><br><span class="line">    <span class="comment">/* 左右外边距20px */</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置h2样式 */</span></span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-tag">h2</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#11719e</span>;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">21px</span> Georgia;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置h3样式 */</span></span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-tag">h3</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#8c8c8c</span>;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">12px</span> Myriad Pro;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置imgDiv样式 */</span></span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.imgDiv</span>&#123;</span><br><span class="line">    <span class="attribute">widows</span>: <span class="number">299px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">190px</span>;</span><br><span class="line">    <span class="comment">/* 设置背景图片 */</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../image/img-bg.png) no-repeat;</span><br><span class="line">    <span class="comment">/* 设置上下外边距 */</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">16px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="comment">/* 图片水平居中 */</span></span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="comment">/* 使图片垂直居中 */</span></span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置content中的p样式 */</span></span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">92px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#3e3e3e</span>;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">13px</span> Myriad Pro;</span><br><span class="line">    <span class="comment">/* 设置左外边距 */</span></span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">word-spacing</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置content中的button样式 */</span></span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="comment">/* 内联元素改块元素 */</span></span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">163px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../image/btn.png) no-repeat;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#016999</span>;</span><br><span class="line">    <span class="comment">/* 设置字体样式 行高40px（跟button高度相等 垂直居中） */</span></span><br><span class="line">    <span class="attribute">font</span>: <span class="number">14px</span>/<span class="number">40px</span> Myriad Pro;</span><br><span class="line">    <span class="comment">/* 向右缩进1个字符 */</span></span><br><span class="line">    <span class="attribute">text-indent</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="comment">/* 设置下外边距 */</span></span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="comment">/* 设置左外边距 */</span></span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置contact样式 */</span></span><br><span class="line"><span class="selector-class">.contact</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../image/contact-bg.png) no-repeat top center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置contact中的div */</span></span><br><span class="line"><span class="selector-class">.contact</span> <span class="selector-class">.sc</span>, <span class="selector-class">.contact</span> <span class="selector-class">.co</span>, <span class="selector-class">.contact</span> <span class="selector-class">.nu</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置content中的co样式 */</span></span><br><span class="line"><span class="selector-class">.contact</span> <span class="selector-class">.co</span>&#123;</span><br><span class="line">    <span class="comment">/* 左右外边距20px */</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置contact中的表单项 */</span></span><br><span class="line"><span class="selector-class">.contact</span> <span class="selector-class">.txt</span>&#123;</span><br><span class="line">    <span class="comment">/* 指定宽高和背景图片 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">276px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">33px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../image/txt-bg.png) no-repeat;</span><br><span class="line">    <span class="comment">/* 去除边框 */</span></span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="comment">/* 去除默认边距 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">16px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="comment">/* 字体 */</span></span><br><span class="line">    <span class="attribute">color</span>: d4d4d4;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">10px</span> Verdana;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.contact</span> <span class="selector-class">.tarea</span>&#123;</span><br><span class="line">    <span class="comment">/* 指定宽高和背景图片 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">276px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">114px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../image/tarea-bg.png) no-repeat;</span><br><span class="line">    <span class="comment">/* 去除边框 */</span></span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="comment">/* 不能改变大小 */</span></span><br><span class="line">    <span class="attribute">resize</span>: none;</span><br><span class="line">    <span class="comment">/* 去除默认边距 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="comment">/* 字体 */</span></span><br><span class="line">    <span class="attribute">color</span>: d4d4d4;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">10px</span> Verdana;</span><br><span class="line">    <span class="comment">/* 清除IE滚动条样式 */</span></span><br><span class="line">    <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置contact中的btn */</span></span><br><span class="line"><span class="selector-class">.contact</span> <span class="selector-class">.btn</span>&#123;</span><br><span class="line">    <span class="comment">/* 指定宽高和背景图片 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">163px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">32px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../image/btn2.png) no-repeat;</span><br><span class="line">    <span class="comment">/* 设置字体 */</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">13px</span> Georgia;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">    <span class="attribute">text-indent</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="comment">/* 去除边框 */</span></span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="comment">/* 去除默认边距 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">11px</span> <span class="number">0px</span> <span class="number">23px</span> <span class="number">0px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 鼠标指针样式 */</span></span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置contact中的h2 */</span></span><br><span class="line"><span class="selector-class">.contact</span> <span class="selector-tag">h2</span>&#123;</span><br><span class="line">    <span class="comment">/* 设置字体样式 */</span></span><br><span class="line">    <span class="attribute">font</span>: <span class="number">18px</span> Georgia;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#444444</span>;</span><br><span class="line">    <span class="comment">/* 设置下边框 */</span></span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> dashed <span class="number">#d3d3d3</span>;</span><br><span class="line">    <span class="comment">/* 设置上下外边距 */</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">44px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="comment">/* 设置下内边距 */</span></span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置contact左侧p标签 */</span></span><br><span class="line"><span class="selector-class">.sc</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#444444</span>;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">12px</span> Myriad Pro;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置icon间距 */</span></span><br><span class="line"><span class="selector-class">.icon</span> &#123;</span><br><span class="line">    <span class="comment">/* 清除间距 */</span></span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置左侧的nl */</span></span><br><span class="line"><span class="selector-class">.contact</span> <span class="selector-class">.nl</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#444444</span>;</span><br><span class="line">    <span class="attribute">font</span>: bold <span class="number">18px</span> Gill Sans MT;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置左侧的txt边距 */</span></span><br><span class="line"><span class="selector-class">.sc</span> <span class="selector-class">.txt</span>&#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置右侧p标签 */</span></span><br><span class="line"><span class="selector-class">.nu</span> <span class="selector-tag">p</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nu</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">58px</span>;</span><br><span class="line">    <span class="attribute">columns</span>: <span class="number">#444444</span>;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">12px</span> Myriad Pro;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> dashed <span class="number">#d3d3d3</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">9px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nu</span> <span class="selector-class">.p2</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置footer样式 */</span></span><br><span class="line"><span class="selector-class">.footer</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">183px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#333333</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">10px</span> solid <span class="number">#4c4c4c</span>;</span><br><span class="line">    <span class="attribute">padding</span>: </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* footer中的超链接和p */</span></span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-tag">a</span>, <span class="selector-class">.footer</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#999999</span>;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">11px</span> Myriad Pro;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-class">.cp</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-class">.w</span>&#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">18px</span> <span class="number">23px</span> <span class="number">0px</span> <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#cacaca</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><hr><p>reset.css代码</p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏</div></div><div class="fold"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* http://meyerweb.com/eric/tools/css/reset/ </span></span><br><span class="line"><span class="comment">   v2.0 | 20110126</span></span><br><span class="line"><span class="comment">   License: none (public domain)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span>, <span class="selector-tag">div</span>, <span class="selector-tag">span</span>, <span class="selector-tag">applet</span>, <span class="selector-tag">object</span>, <span class="selector-tag">iframe</span>,</span><br><span class="line"><span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span>, <span class="selector-tag">p</span>, <span class="selector-tag">blockquote</span>, <span class="selector-tag">pre</span>,</span><br><span class="line"><span class="selector-tag">a</span>, <span class="selector-tag">abbr</span>, <span class="selector-tag">acronym</span>, <span class="selector-tag">address</span>, <span class="selector-tag">big</span>, <span class="selector-tag">cite</span>, <span class="selector-tag">code</span>,</span><br><span class="line"><span class="selector-tag">del</span>, <span class="selector-tag">dfn</span>, <span class="selector-tag">em</span>, <span class="selector-tag">img</span>, <span class="selector-tag">ins</span>, <span class="selector-tag">kbd</span>, <span class="selector-tag">q</span>, <span class="selector-tag">s</span>, <span class="selector-tag">samp</span>,</span><br><span class="line"><span class="selector-tag">small</span>, <span class="selector-tag">strike</span>, <span class="selector-tag">strong</span>, <span class="selector-tag">sub</span>, <span class="selector-tag">sup</span>, <span class="selector-tag">tt</span>, <span class="selector-tag">var</span>,</span><br><span class="line"><span class="selector-tag">b</span>, <span class="selector-tag">u</span>, <span class="selector-tag">i</span>, <span class="selector-tag">center</span>,</span><br><span class="line"><span class="selector-tag">dl</span>, <span class="selector-tag">dt</span>, <span class="selector-tag">dd</span>, <span class="selector-tag">ol</span>, <span class="selector-tag">ul</span>, <span class="selector-tag">li</span>,</span><br><span class="line"><span class="selector-tag">fieldset</span>, <span class="selector-tag">form</span>, <span class="selector-tag">label</span>, <span class="selector-tag">legend</span>,</span><br><span class="line"><span class="selector-tag">table</span>, <span class="selector-tag">caption</span>, <span class="selector-tag">tbody</span>, <span class="selector-tag">tfoot</span>, <span class="selector-tag">thead</span>, <span class="selector-tag">tr</span>, <span class="selector-tag">th</span>, <span class="selector-tag">td</span>,</span><br><span class="line"><span class="selector-tag">article</span>, <span class="selector-tag">aside</span>, <span class="selector-tag">canvas</span>, <span class="selector-tag">details</span>, <span class="selector-tag">embed</span>, </span><br><span class="line"><span class="selector-tag">figure</span>, <span class="selector-tag">figcaption</span>, <span class="selector-tag">footer</span>, <span class="selector-tag">header</span>, <span class="selector-tag">hgroup</span>, </span><br><span class="line"><span class="selector-tag">menu</span>, <span class="selector-tag">nav</span>, <span class="selector-tag">output</span>, <span class="selector-tag">ruby</span>, <span class="selector-tag">section</span>, <span class="selector-tag">summary</span>,</span><br><span class="line"><span class="selector-tag">time</span>, <span class="selector-tag">mark</span>, <span class="selector-tag">audio</span>, <span class="selector-tag">video</span> &#123;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">font</span>: inherit;</span><br><span class="line"><span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* HTML5 display-role reset for older browsers */</span></span><br><span class="line"><span class="selector-tag">article</span>, <span class="selector-tag">aside</span>, <span class="selector-tag">details</span>, <span class="selector-tag">figcaption</span>, <span class="selector-tag">figure</span>, </span><br><span class="line"><span class="selector-tag">footer</span>, <span class="selector-tag">header</span>, <span class="selector-tag">hgroup</span>, <span class="selector-tag">menu</span>, <span class="selector-tag">nav</span>, <span class="selector-tag">section</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ol</span>, <span class="selector-tag">ul</span> &#123;</span><br><span class="line"><span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">blockquote</span>, <span class="selector-tag">q</span> &#123;</span><br><span class="line"><span class="attribute">quotes</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">blockquote</span><span class="selector-pseudo">:before</span>, <span class="selector-tag">blockquote</span><span class="selector-pseudo">:after</span>,</span><br><span class="line"><span class="selector-tag">q</span><span class="selector-pseudo">:before</span>, <span class="selector-tag">q</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line"><span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line"><span class="attribute">content</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line"><span class="attribute">border-collapse</span>: collapse;</span><br><span class="line"><span class="attribute">border-spacing</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><hr><p>html笔记：</p><p>1.html引入外部css/js文件的方法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- css --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"xxx.css"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- js --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"xxx.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.a是内联元素 a是内联元素 a是内联元素</p><p>3.表单使用格式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">    xxx</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.文本框和文本域</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- value="值" --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"默认水印"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">placeholder</span>=<span class="string">"默认水印"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p>css笔记：</p><p>1.注意高度塌陷 注意高度塌陷 注意高度塌陷</p><p>元素浮动的时候注意 元素浮动的时候注意 元素浮动的时候注意</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 解决高度塌陷 */</span></span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>,</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.margin和padding<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">margin</span>:外边距，元素与元素之间的间距</span><br><span class="line"><span class="selector-tag">paddind</span>:内边距，元素与内容之间的间距，会造成元素宽高增大</span><br></pre></td></tr></table></figure></p><p>3.border style</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">none</span> 定义无边框。 </span><br><span class="line"><span class="selector-tag">hidden</span> 与 "<span class="selector-tag">none</span>" 相同。不过应用于表时除外，对于表，<span class="selector-tag">hidden</span> 用于解决边框冲突。 </span><br><span class="line"><span class="selector-tag">dotted</span> 定义点状边框。在大多数浏览器中呈现为实线。 </span><br><span class="line"><span class="selector-tag">dashed</span> 定义虚线。在大多数浏览器中呈现为实线。 </span><br><span class="line"><span class="selector-tag">solid</span> 定义实线。 </span><br><span class="line"><span class="selector-tag">double</span> 定义双线。双线的宽度等于 <span class="selector-tag">border-width</span> 的值。 </span><br><span class="line"><span class="selector-tag">groove</span> 定义 3<span class="selector-tag">D</span> 凹槽边框。其效果取决于 <span class="selector-tag">border-color</span> 的值。 </span><br><span class="line"><span class="selector-tag">ridge</span> 定义 3<span class="selector-tag">D</span> 垄状边框。其效果取决于 <span class="selector-tag">border-color</span> 的值。 </span><br><span class="line"><span class="selector-tag">inset</span> 定义 3<span class="selector-tag">D</span> <span class="selector-tag">inset</span> 边框。其效果取决于 <span class="selector-tag">border-color</span> 的值。 </span><br><span class="line"><span class="selector-tag">outset</span> 定义 3<span class="selector-tag">D</span> <span class="selector-tag">outset</span> 边框。其效果取决于 <span class="selector-tag">border-color</span> 的值。 </span><br><span class="line"><span class="selector-tag">inherit</span> 规定应该从父元素继承边框样式。</span><br></pre></td></tr></table></figure><p>4.font<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font</span>: <span class="selector-tag">bold</span> 14<span class="selector-tag">px</span> <span class="selector-tag">Georgia</span>; <span class="comment">/* 粗细 大小 字体 */</span></span><br></pre></td></tr></table></figure></p><p>5.文本样式<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 去除下划线 */</span></span><br><span class="line"><span class="selector-tag">text-decoration</span>: <span class="selector-tag">none</span>;</span><br><span class="line"><span class="comment">/* 向右缩进1个字符 */</span></span><br><span class="line"><span class="selector-tag">text-indent</span>: 1<span class="selector-tag">em</span>;</span><br></pre></td></tr></table></figure></p><p>6.背景<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">url</span>(<span class="selector-tag">xxx</span>) <span class="selector-attr">[repeat]</span> <span class="selector-attr">[position]</span> <span class="selector-attr">[position]</span>;</span><br><span class="line"><span class="comment">/* no-repeat repeat-x repeat-y */</span></span><br><span class="line"><span class="comment">/* left right bottom top center x-px y-px */</span></span><br></pre></td></tr></table></figure></p><p>7.调节布局时尽量考虑以后同类型组件，方便管理，要有大局观</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hdu3974-Assign the task(dfs序建线段树)</title>
      <link href="/2019/05/28/hdu3974/"/>
      <url>/2019/05/28/hdu3974/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今天做线段树的题碰到一个需要dfs序转化成建线段树，挺有意义的一道题</p></blockquote><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>There is a company that has N employees(numbered from 1 to N),every employee in the company has a immediate boss (except for the leader of whole company).If you are the immediate boss of someone,that person is your subordinate, and all his subordinates are your subordinates as well. If you are nobody’s boss, then you have no subordinates,the employee who has no immediate boss is the leader of whole company.So it means the N employees form a tree. </p><p>The company usually assigns some tasks to some employees to finish.When a task is assigned to someone,He/She will assigned it to all his/her subordinates.In other words,the person and all his/her subordinates received a task in the same time. Furthermore,whenever a employee received a task,he/she will stop the current task(if he/she has) and start the new one. </p><p>Write a program that will help in figuring out some employee’s current task after the company assign some tasks to some employee.</p></blockquote><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给你一个多叉树，有2种操作，</p><p><code>C x</code>：查询x结点正在做的任务</p><p><code>T x y</code>：给x结点布置y任务</p><p>每一次查询要给出一个答案</p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>一开始因为是多叉树，没什么区间性，没往线段树上想，就暴力写了一发，给结点染色后，所有子结点也染上色，然后用lazy标记稍稍优化一下，避免重复染色，但还是T了 QAQ</p><p>查了一下发现有dfs序建树这种东西，主要用到时间戳(<code>tot</code>)，时间戳以前了解过，很快就上手了</p><p>主要思想如下：</p><p>对一颗树进行dfs，由于dfs的性质，父亲结点出来的时刻会在儿子结点之后，用<code>l[] , r[]</code>分别表示一个结点进去、出来的时刻，这样从时间戳上看，就形成了一段区间，并且父亲结点是盖住儿子结点的，就可以用线段树求解了~~~</p><p>每个结点会产生2个时间戳，所以区间长度是<code>2*n</code>（这边可以优化一下，每个结点产生1个时间戳）</p><p>对于更新操作，对<code>l[x]~r[x]</code>执行区间更新</p><p>对于查询操作，对<code>l[x]</code>或者<code>r[x]</code>单点查询都可以</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e4</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> T,kase;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; edge[maxn];</span><br><span class="line"><span class="keyword">int</span> degree[maxn],tree[<span class="number">8</span>*maxn];</span><br><span class="line"><span class="keyword">int</span> l[maxn],r[maxn],tot;</span><br><span class="line"><span class="comment">// hdu 3974</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    l[u]=++tot;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;edge[u].size();i++)</span><br><span class="line">        dfs(edge[u][i]);</span><br><span class="line">    r[u]=++tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tree[rt]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">    build(l,mid,<span class="number">2</span>*rt);</span><br><span class="line">    build(mid+<span class="number">1</span>,r,<span class="number">2</span>*rt+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tree[rt]!=<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[<span class="number">2</span>*rt]=tree[rt];</span><br><span class="line">        tree[<span class="number">2</span>*rt+<span class="number">1</span>]=tree[rt];</span><br><span class="line">        tree[rt]=<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> y,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L&lt;=l &amp;&amp; R&gt;=r)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[rt]=y;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    pushdown(rt);</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(L&lt;=mid)</span><br><span class="line">        update(L,R,y,l,mid,<span class="number">2</span>*rt);</span><br><span class="line">    <span class="keyword">if</span>(R&gt;mid)</span><br><span class="line">        update(L,R,y,mid+<span class="number">1</span>,r,<span class="number">2</span>*rt+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r &amp;&amp; l==L)</span><br><span class="line">        <span class="keyword">return</span> tree[rt];</span><br><span class="line">    pushdown(rt);</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(L&lt;=mid)</span><br><span class="line">        <span class="keyword">return</span> query(L,l,mid,<span class="number">2</span>*rt);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> query(L,mid+<span class="number">1</span>,r,<span class="number">2</span>*rt+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        tot=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(degree,<span class="number">0</span>,<span class="keyword">sizeof</span>(degree));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;maxn;i++) edge[i].clear();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u,v;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;u,&amp;v);</span><br><span class="line">            edge[v].push_back(u);</span><br><span class="line">            degree[u]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> root;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">if</span>(!degree[i]) &#123;root=i;<span class="keyword">break</span>;&#125;</span><br><span class="line">        <span class="comment">//printf("rt=%d\n",root);</span></span><br><span class="line">        dfs(root);</span><br><span class="line">        build(<span class="number">1</span>,<span class="number">2</span>*n,<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d:\n"</span>,++kase);</span><br><span class="line">        <span class="keyword">while</span>(m--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> op[<span class="number">3</span>];</span><br><span class="line">            <span class="keyword">int</span> x,y;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,op);</span><br><span class="line">            <span class="keyword">if</span>(op[<span class="number">0</span>]==<span class="string">'C'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,query(l[x],<span class="number">1</span>,<span class="number">2</span>*n,<span class="number">1</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;x,&amp;y);</span><br><span class="line">                update(l[x],r[x],y,<span class="number">1</span>,<span class="number">2</span>*n,<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第十届蓝桥杯C++B组国赛</title>
      <link href="/2019/05/27/lanqiaobei2019/"/>
      <url>/2019/05/27/lanqiaobei2019/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今年打进了国赛，感谢蓝桥杯让我第一次去了北京，并且还水了一个国二<br>但是今年的题莫名变难，暴力杯要往ACM看齐了？？？</p></blockquote><p>今年有十道题 5道填空题 5道编程题</p><p>由于没有原题，只能根据脑子回忆题面</p><h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><p>有2个整数X、Y，满足：</p><p>$2019 &lt; X &lt; Y$</p><p>$2019^2，X^2，Y^2成等差数列$</p><p>要你找到满足条件的$X+Y$的最小值</p><a id="more"></a><p>利用等差中项</p><p>直接枚举X、Y暴力即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">LL x,y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(x=<span class="number">2020</span>;x&lt;maxn;x++)</span><br><span class="line">        <span class="keyword">for</span>(y=x+<span class="number">1</span>;y&lt;maxn;y++)</span><br><span class="line">            <span class="keyword">if</span>(<span class="number">2</span>*x*x==<span class="number">2019</span>*<span class="number">2019</span>+y*y)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%lld %lld %lld\n"</span>,x,y,x+y);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏答案</div></div><div class="fold"><p>ans=7020</p></div></div><h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><p>把2019分解成若干个两两不同的质数之和，问有多少种组合？</p><p>（擦，又看错题，看成分解成2个不同质数之和了）</p><p>把2019以内的质数枚举出来</p><p>随后问题转化为01背包问题</p><p>把每个质数看成重量为$w_i$的物品，要求装满容量为2019的背包，有几种方案？</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> prime[maxn];</span><br><span class="line">LL dp[<span class="number">307</span>][<span class="number">2020</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">2019</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!prime[i]) prime[++prime[<span class="number">0</span>]]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=prime[<span class="number">0</span>] &amp;&amp; prime[j]&lt;=<span class="number">2019</span>/i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            prime[i*prime[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=prime[<span class="number">0</span>];i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=prime[i];j&lt;=<span class="number">2019</span>;j++)</span><br><span class="line">            dp[i][j]=dp[i<span class="number">-1</span>][j]+dp[i<span class="number">-1</span>][j-prime[i]];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dp[prime[<span class="number">0</span>]][<span class="number">2019</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏答案</div></div><div class="fold"><p>ans=???</p></div></div><h2 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h2><p>一个数有若干个约数（因数），给定约数的个数$n$，问这个数最小是多少？记为$S_n$</p><p>例如:</p><p>$S_1=1$ 因为1的约数只有1</p><p>$S_2=2$ 因为2的约数有1和2</p><p>$S_3=4$ 因为4的约数有1，2，4</p><p>问$S_{100}=？$</p><p>唯一分解定理</p><p>对每个正整数都有</p><p>$n=p_1^{a_1}p_2^{a_2}p_3^{a_3}…p_k^{a_k}$</p><p>其中$p_1,p_2,p_3…p_k$为质数</p><p>那么n的约数个数为$(1+a_1)(1+a_2)(1+a_3)…(1+a_k)$</p><p>由排列组合很容易证明</p><p>可以用素数筛优化</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> m=<span class="built_in">sqrt</span>(n+<span class="number">0.5</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(n%i==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            n/=i;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        res*=(<span class="number">1</span>+cnt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">1</span>)</span><br><span class="line">        res*=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> n=<span class="number">1</span>;n&lt;=<span class="number">100000</span>;n++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t=fun(n);</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">100</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,n,t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏答案</div></div><div class="fold"><p>ans=45360</p></div></div><h2 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h2><p>题目描述有点复杂，这个等原题出来吧。。。</p><h2 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h2><p>迷宫问题的一种</p><p>给一个5x5的矩阵，在格子的线上行走（可看成6x6的矩阵在格子内行走），每次可以上下左右4个方向，起点在左上角</p><p>要求：</p><p>1.步数不超过12步</p><p>2.最终回到起点</p><p>3.没有自交的路线（走过的格子不能再走，起点除外）</p><p>问有多少种走法？</p><p>dfs+剪枝<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏答案</div></div><div class="fold"><p>ans=???</p></div></div>]]></content>
      
      
      <categories>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>福利向---南邮计算机科学与技术专业历年考试资料</title>
      <link href="/2019/05/23/njuptcsfreeexams/"/>
      <url>/2019/05/23/njuptcsfreeexams/</url>
      
        <content type="html"><![CDATA[<blockquote><p>受学长所托 分享一波南邮CS专业的福利<br><br><br><a id="more"></a></p></blockquote><font color="red" size="16px">    ！！！！！！<br>    还在为考试不知道怎么复习而发愁吗？ <br>    加入下方github项目查询考试资料👇 <br><a href="https://github.com/Kehuaiiiiii/NJUPT-CS-Free-Exams" target="_blank" rel="noopener">NJUPT-CS-Free-Exams</a></font><h2 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h2><p>1.本repo下资料仅供个人学习交流使用，严禁用作商业用途，请在下载后24小时内删除。如有侵权，请及时与我们联系。</p><p>2.资料仅供参考，请自己判断适用性。</p><p>3.部分资料已经有些年头，如果大家手头有更好的资料，敬请PR。</p><p>4.如果大家发现资料中的问题，请不要犹豫，直接提出issue, 我们会尽快修改。</p><p><img src="https://kimiye.oss-cn-shanghai.aliyuncs.com/img/csexam/csexam.jpg" width="200px" height="500px" align="center"></p>]]></content>
      
      
      <categories>
          
          <category> 福利 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 福利 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2.让搜索引擎收录你的博客</title>
      <link href="/2019/05/23/hexo2/"/>
      <url>/2019/05/23/hexo2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文介绍如何在搜索引擎上能够搜到你的博客/博文<br><a id="more"></a></p><h2 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h2><p>在百度中搜索你的博客域名，出现如下情况</p></blockquote><p><img src="https://kimiye.oss-cn-shanghai.aliyuncs.com/img/hexo/hexo2-1.jpg" width="400px" height="300px" align="center"></p><p><img src="https://kimiye.oss-cn-shanghai.aliyuncs.com/img/hexo/hexo2-emoji1.jpg" width="400px" height="300px" align="center"></p><h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><p>点击上图中的<code>提交网址</code>或者自行搜索百度站长</p><p>注册、登录、认证（神烦）后</p><p>找到<code>用户中心 --&gt; 站点管理 --&gt; 添加网站</code></p><p>按步骤完成后到达<code>网站验证</code>，这里我选择用<code>CANME验证</code></p><p><img src="https://kimiye.oss-cn-shanghai.aliyuncs.com/img/hexo/hexo2-2.jpg" width="400px" height="200px" align="center"></p><p>按照他给的网站 去到阿里云域名解析添加解析（验证完成后也不要删）</p><p><img src="https://kimiye.oss-cn-shanghai.aliyuncs.com/img/hexo/hexo2-3.jpg" width="400px" height="100px" align="center"></p><p>等待验证 完成！</p><h2 id="生成sitemap"><a href="#生成sitemap" class="headerlink" title="生成sitemap"></a>生成sitemap</h2><p>先安装sitemap插件<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save     </span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure></p><p>然后需要到hexo根目录下的<code>_config.yml</code>中添加</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 自动生成sitemap</span><br><span class="line">sitemap:</span><br><span class="line">    path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">    path: baidusitemap.xml</span><br></pre></td></tr></table></figure><p>编译博客<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure></p><p>在<code>public</code>下看看有没有<code>sitemap.xml</code>和<code>baidusitemap.xml</code>生成</p><p>有的话就去主题配置文件中的<code>baidu_push</code>改为true</p><p>这样百度就会自动收录你的博文</p><p>也可以手动去百度站长平台提交你的<code>sitemap.xml</code>和<code>baidusitemap.xml</code></p><p><img src="https://kimiye.oss-cn-shanghai.aliyuncs.com/img/hexo/hexo2-6.jpg" width="400px" height="300px" align="center"></p><p>emmmm….终于有了</p><p>百度效率令人捉急，慢慢等吧。。。</p><p><img src="https://kimiye.oss-cn-shanghai.aliyuncs.com/img/hexo/hexo2-7.jpg" width="450px" height="200px" align="center"></p>]]></content>
      
      
      <categories>
          
          <category> hexo瞎玩系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.hexo搭建博客指南</title>
      <link href="/2019/05/22/hexo1/"/>
      <url>/2019/05/22/hexo1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文主要列举一下用hexo搭建博客的主要过程以及我中途遇到的一些坑<br><a id="more"></a></p><hr><h2 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h2><p>首先先搭起本地博客 需要的工具:</p></blockquote><p><code>git</code></p><p><code>node.js</code></p><p><code>hexo</code></p><p>ps:</p><p>1.git下载慢的可以去<a href="https://pc.qq.com/detail/13/detail_22693.html" target="_blank" rel="noopener">腾讯</a>那边下载</p><p>2.node.js安装出现error2503、2502的需用管理员身份安装(最好是用cmd那种方式 我右键管理员身份运行还是失败)</p><p>3.具体教程可参考<a href="https://www.jianshu.com/p/4eaddcbe4d12" target="_blank" rel="noopener">这里</a></p><p>本地搭建好后就可以上传至<a href="https://github.com/" target="_blank" rel="noopener">github</a>，这样就能通过xxxx.github.io访问你的博客了</p><h2 id="博客美化"><a href="#博客美化" class="headerlink" title="博客美化"></a>博客美化</h2><p>可以参考如下链接：</p><p><a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/configuration.html</a></p><p><a href="https://www.jianshu.com/p/1f8107a8778c" target="_blank" rel="noopener">https://www.jianshu.com/p/1f8107a8778c</a></p><p><a href="https://blog.csdn.net/nightmare_dimple/article/details/86661502" target="_blank" rel="noopener">https://blog.csdn.net/nightmare_dimple/article/details/86661502</a></p><h2 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h2><p>先说点题外话 原先我以为要用自定义域名的话 需要一个自己的服务器 但是由于hexo生成的是静态博客 可以<font color="red"><b>不需要</b></font>自己的服务器 我只在阿里云买了一个域名 <font color="red"><b>首年6元</b></font></p><p>&lt;/b&gt;&lt;/font&gt;<br>ps: 当然，你想要更快的访问速度用自己的服务器也是可以的</p><p>自定义域名的方法有2种</p><p>1.在阿里云域名中解析时，添加记录类型为<code>A</code>的解析，记录值填写你的<code>xxxx.github.io的ip地址</code>（具体方法为打开cmd 输入 <code>ping xxxx.github.io</code> 会返回一个ip地址）</p><p>2.在阿里云域名中解析时，添加记录类型为<code>CNAME</code>的解析，记录值填写<code>xxxx.github.io</code></p><p>ps：我这边使用第一种方法经常崩（不知道为什么= =）</p><p>解析完成后需要在hexo下的<code>source</code>文件夹中添加<code>CNAME</code>文件，里面填写你的域名，比如我的就是<code>www.kimiye.xyz</code></p><p>ps:</p><p>1.CNAME文件不需要任何后缀</p><p>2.hexo部署到github后可能还是404，需要在github项目中的setting找到<code>Custom domain</code>，下面填写你的域名，点击Save，你会发现在项目中多了一个CNAME文件，然后因为每次部署都会覆盖CNAME文件，需要在hexo配置文件下的<code>skip_render</code>中添加<code>CNAME</code></p><p>在此感谢一下<a href="https://blog.csdn.net/wonz5130/article/details/82828761" target="_blank" rel="noopener">wz学长</a>，大家还是不懂的可以看看他的这篇博文。</p>]]></content>
      
      
      <categories>
          
          <category> hexo瞎玩系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
